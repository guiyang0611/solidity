{
	"id": "91f3246c00bcdab64afd162c01585ddd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/RomanToInt.sol": {
				"content": "// SPDX-License-Identifier: NFT\r\npragma solidity ^0.8;\r\n\r\ncontract Roman {\r\n\r\n    function romanToInt(string memory str) public pure returns (uint) {\r\n        bytes memory data = bytes(str);\r\n        uint len = data.length;\r\n        uint total = 0;\r\n        uint i = 0;\r\n        while (i < len) {\r\n           if (i+ 1 < len){\r\n                uint pair = getPairValue(data[i],data[i+1]);\r\n                if(pair != 0){\r\n                    total += pair;\r\n                    i += 2;\r\n                    continue;\r\n                }\r\n           }   \r\n            total += getSingleValue(data[i]);\r\n            i++;\r\n        }\r\n        return total;\r\n    }\r\n\r\n    function getSingleValue(bytes1 s) internal pure returns (uint) {\r\n         if (s == 'I') return 1;\r\n         if (s == 'V') return 5;\r\n         if (s == 'X') return 10;\r\n         if (s == 'L') return 50;\r\n         if (s == 'C') return 100;\r\n         if (s == 'D') return 500;\r\n         if (s == 'M') return 1000;\r\n         revert(\"Invalid Roman numeral\");\r\n    }\r\n\r\n    function getPairValue(bytes1 a, bytes1 b) internal pure returns (uint) {\r\n         if (a == 'I' && b == 'V') return 4;\r\n         if (a == 'I' && b == 'X') return 9;\r\n         if (a == 'X' && b == 'L') return 40;\r\n         if (a == 'X' && b == 'C') return 90;\r\n         if (a == 'C' && b == 'D') return 400;\r\n         if (a == 'C' && b == 'M') return 900;\r\n         return 0;\r\n    }\r\n  \r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/RomanToInt.sol": {
				"Roman": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "romanToInt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/RomanToInt.sol\":58:1422  contract Roman {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/RomanToInt.sol\":58:1422  contract Roman {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xcb159dfe\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/RomanToInt.sol\":82:657  function romanToInt(string memory str) public pure returns (uint) {... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"contracts/RomanToInt.sol\":142:146  uint */\n      0x00\n        /* \"contracts/RomanToInt.sol\":159:176  bytes memory data */\n      0x00\n        /* \"contracts/RomanToInt.sol\":185:188  str */\n      dup3\n        /* \"contracts/RomanToInt.sol\":159:189  bytes memory data = bytes(str) */\n      swap1\n      pop\n        /* \"contracts/RomanToInt.sol\":200:208  uint len */\n      0x00\n        /* \"contracts/RomanToInt.sol\":211:215  data */\n      dup2\n        /* \"contracts/RomanToInt.sol\":211:222  data.length */\n      mload\n        /* \"contracts/RomanToInt.sol\":200:222  uint len = data.length */\n      swap1\n      pop\n        /* \"contracts/RomanToInt.sol\":233:243  uint total */\n      0x00\n        /* \"contracts/RomanToInt.sol\":246:247  0 */\n      0x00\n        /* \"contracts/RomanToInt.sol\":233:247  uint total = 0 */\n      swap1\n      pop\n        /* \"contracts/RomanToInt.sol\":258:264  uint i */\n      0x00\n        /* \"contracts/RomanToInt.sol\":267:268  0 */\n      0x00\n        /* \"contracts/RomanToInt.sol\":258:268  uint i = 0 */\n      swap1\n      pop\n        /* \"contracts/RomanToInt.sol\":279:627  while (i < len) {... */\n    tag_11:\n        /* \"contracts/RomanToInt.sol\":290:293  len */\n      dup3\n        /* \"contracts/RomanToInt.sol\":286:287  i */\n      dup2\n        /* \"contracts/RomanToInt.sol\":286:293  i < len */\n      lt\n        /* \"contracts/RomanToInt.sol\":279:627  while (i < len) {... */\n      iszero\n      tag_12\n      jumpi\n        /* \"contracts/RomanToInt.sol\":320:323  len */\n      dup3\n        /* \"contracts/RomanToInt.sol\":316:317  1 */\n      0x01\n        /* \"contracts/RomanToInt.sol\":313:314  i */\n      dup3\n        /* \"contracts/RomanToInt.sol\":313:317  i+ 1 */\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n        /* \"contracts/RomanToInt.sol\":313:323  i+ 1 < len */\n      lt\n        /* \"contracts/RomanToInt.sol\":309:548  if (i+ 1 < len){... */\n      iszero\n      tag_15\n      jumpi\n        /* \"contracts/RomanToInt.sol\":343:352  uint pair */\n      0x00\n        /* \"contracts/RomanToInt.sol\":355:386  getPairValue(data[i],data[i+1]) */\n      tag_16\n        /* \"contracts/RomanToInt.sol\":368:372  data */\n      dup6\n        /* \"contracts/RomanToInt.sol\":373:374  i */\n      dup4\n        /* \"contracts/RomanToInt.sol\":368:375  data[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_17\n      jumpi\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n    tag_17:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"contracts/RomanToInt.sol\":376:380  data */\n      dup7\n        /* \"contracts/RomanToInt.sol\":383:384  1 */\n      0x01\n        /* \"contracts/RomanToInt.sol\":381:382  i */\n      dup6\n        /* \"contracts/RomanToInt.sol\":381:384  i+1 */\n      tag_20\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_20:\n        /* \"contracts/RomanToInt.sol\":376:385  data[i+1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_21\n      jumpi\n      tag_22\n      tag_19\n      jump\t// in\n    tag_22:\n    tag_21:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"contracts/RomanToInt.sol\":355:367  getPairValue */\n      tag_23\n        /* \"contracts/RomanToInt.sol\":355:386  getPairValue(data[i],data[i+1]) */\n      jump\t// in\n    tag_16:\n        /* \"contracts/RomanToInt.sol\":343:386  uint pair = getPairValue(data[i],data[i+1]) */\n      swap1\n      pop\n        /* \"contracts/RomanToInt.sol\":416:417  0 */\n      0x00\n        /* \"contracts/RomanToInt.sol\":408:412  pair */\n      dup2\n        /* \"contracts/RomanToInt.sol\":408:417  pair != 0 */\n      eq\n        /* \"contracts/RomanToInt.sol\":405:534  if(pair != 0){... */\n      tag_24\n      jumpi\n        /* \"contracts/RomanToInt.sol\":450:454  pair */\n      dup1\n        /* \"contracts/RomanToInt.sol\":441:454  total += pair */\n      dup4\n      tag_25\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_25:\n      swap3\n      pop\n        /* \"contracts/RomanToInt.sol\":482:483  2 */\n      0x02\n        /* \"contracts/RomanToInt.sol\":477:483  i += 2 */\n      dup3\n      tag_26\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_26:\n      swap2\n      pop\n        /* \"contracts/RomanToInt.sol\":506:514  continue */\n      pop\n      jump(tag_11)\n        /* \"contracts/RomanToInt.sol\":405:534  if(pair != 0){... */\n    tag_24:\n        /* \"contracts/RomanToInt.sol\":324:548  {... */\n      pop\n        /* \"contracts/RomanToInt.sol\":309:548  if (i+ 1 < len){... */\n    tag_15:\n        /* \"contracts/RomanToInt.sol\":574:597  getSingleValue(data[i]) */\n      tag_27\n        /* \"contracts/RomanToInt.sol\":589:593  data */\n      dup5\n        /* \"contracts/RomanToInt.sol\":594:595  i */\n      dup3\n        /* \"contracts/RomanToInt.sol\":589:596  data[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_28\n      jumpi\n      tag_29\n      tag_19\n      jump\t// in\n    tag_29:\n    tag_28:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"contracts/RomanToInt.sol\":574:588  getSingleValue */\n      tag_30\n        /* \"contracts/RomanToInt.sol\":574:597  getSingleValue(data[i]) */\n      jump\t// in\n    tag_27:\n        /* \"contracts/RomanToInt.sol\":565:597  total += getSingleValue(data[i]) */\n      dup3\n      tag_31\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_31:\n      swap2\n      pop\n        /* \"contracts/RomanToInt.sol\":612:615  i++ */\n      dup1\n      dup1\n      tag_32\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      swap2\n      pop\n      pop\n        /* \"contracts/RomanToInt.sol\":279:627  while (i < len) {... */\n      jump(tag_11)\n    tag_12:\n        /* \"contracts/RomanToInt.sol\":644:649  total */\n      dup2\n        /* \"contracts/RomanToInt.sol\":637:649  return total */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/RomanToInt.sol\":82:657  function romanToInt(string memory str) public pure returns (uint) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/RomanToInt.sol\":1034:1415  function getPairValue(bytes1 a, bytes1 b) internal pure returns (uint) {... */\n    tag_23:\n        /* \"contracts/RomanToInt.sol\":1099:1103  uint */\n      0x00\n        /* \"contracts/RomanToInt.sol\":1121:1129  a == 'I' */\n      0x4900000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/RomanToInt.sol\":1121:1122  a */\n      dup4\n        /* \"contracts/RomanToInt.sol\":1121:1129  a == 'I' */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/RomanToInt.sol\":1121:1141  a == 'I' && b == 'V' */\n      dup1\n      iszero\n      tag_35\n      jumpi\n      pop\n        /* \"contracts/RomanToInt.sol\":1133:1141  b == 'V' */\n      0x5600000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/RomanToInt.sol\":1133:1134  b */\n      dup3\n        /* \"contracts/RomanToInt.sol\":1133:1141  b == 'V' */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/RomanToInt.sol\":1121:1141  a == 'I' && b == 'V' */\n    tag_35:\n        /* \"contracts/RomanToInt.sol\":1117:1151  if (a == 'I' && b == 'V') return 4 */\n      iszero\n      tag_36\n      jumpi\n        /* \"contracts/RomanToInt.sol\":1150:1151  4 */\n      0x04\n        /* \"contracts/RomanToInt.sol\":1143:1151  return 4 */\n      swap1\n      pop\n      jump(tag_34)\n        /* \"contracts/RomanToInt.sol\":1117:1151  if (a == 'I' && b == 'V') return 4 */\n    tag_36:\n        /* \"contracts/RomanToInt.sol\":1167:1175  a == 'I' */\n      0x4900000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/RomanToInt.sol\":1167:1168  a */\n      dup4\n        /* \"contracts/RomanToInt.sol\":1167:1175  a == 'I' */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/RomanToInt.sol\":1167:1187  a == 'I' && b == 'X' */\n      dup1\n      iszero\n      tag_37\n      jumpi\n      pop\n        /* \"contracts/RomanToInt.sol\":1179:1187  b == 'X' */\n      0x5800000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/RomanToInt.sol\":1179:1180  b */\n      dup3\n        /* \"contracts/RomanToInt.sol\":1179:1187  b == 'X' */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/RomanToInt.sol\":1167:1187  a == 'I' && b == 'X' */\n    tag_37:\n        /* \"contracts/RomanToInt.sol\":1163:1197  if (a == 'I' && b == 'X') return 9 */\n      iszero\n      tag_38\n      jumpi\n        /* \"contracts/RomanToInt.sol\":1196:1197  9 */\n      0x09\n        /* \"contracts/RomanToInt.sol\":1189:1197  return 9 */\n      swap1\n      pop\n      jump(tag_34)\n        /* \"contracts/RomanToInt.sol\":1163:1197  if (a == 'I' && b == 'X') return 9 */\n    tag_38:\n        /* \"contracts/RomanToInt.sol\":1213:1221  a == 'X' */\n      0x5800000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/RomanToInt.sol\":1213:1214  a */\n      dup4\n        /* \"contracts/RomanToInt.sol\":1213:1221  a == 'X' */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/RomanToInt.sol\":1213:1233  a == 'X' && b == 'L' */\n      dup1\n      iszero\n      tag_39\n      jumpi\n      pop\n        /* \"contracts/RomanToInt.sol\":1225:1233  b == 'L' */\n      0x4c00000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/RomanToInt.sol\":1225:1226  b */\n      dup3\n        /* \"contracts/RomanToInt.sol\":1225:1233  b == 'L' */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/RomanToInt.sol\":1213:1233  a == 'X' && b == 'L' */\n    tag_39:\n        /* \"contracts/RomanToInt.sol\":1209:1244  if (a == 'X' && b == 'L') return 40 */\n      iszero\n      tag_40\n      jumpi\n        /* \"contracts/RomanToInt.sol\":1242:1244  40 */\n      0x28\n        /* \"contracts/RomanToInt.sol\":1235:1244  return 40 */\n      swap1\n      pop\n      jump(tag_34)\n        /* \"contracts/RomanToInt.sol\":1209:1244  if (a == 'X' && b == 'L') return 40 */\n    tag_40:\n        /* \"contracts/RomanToInt.sol\":1260:1268  a == 'X' */\n      0x5800000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/RomanToInt.sol\":1260:1261  a */\n      dup4\n        /* \"contracts/RomanToInt.sol\":1260:1268  a == 'X' */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/RomanToInt.sol\":1260:1280  a == 'X' && b == 'C' */\n      dup1\n      iszero\n      tag_41\n      jumpi\n      pop\n        /* \"contracts/RomanToInt.sol\":1272:1280  b == 'C' */\n      0x4300000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/RomanToInt.sol\":1272:1273  b */\n      dup3\n        /* \"contracts/RomanToInt.sol\":1272:1280  b == 'C' */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/RomanToInt.sol\":1260:1280  a == 'X' && b == 'C' */\n    tag_41:\n        /* \"contracts/RomanToInt.sol\":1256:1291  if (a == 'X' && b == 'C') return 90 */\n      iszero\n      tag_42\n      jumpi\n        /* \"contracts/RomanToInt.sol\":1289:1291  90 */\n      0x5a\n        /* \"contracts/RomanToInt.sol\":1282:1291  return 90 */\n      swap1\n      pop\n      jump(tag_34)\n        /* \"contracts/RomanToInt.sol\":1256:1291  if (a == 'X' && b == 'C') return 90 */\n    tag_42:\n        /* \"contracts/RomanToInt.sol\":1307:1315  a == 'C' */\n      0x4300000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/RomanToInt.sol\":1307:1308  a */\n      dup4\n        /* \"contracts/RomanToInt.sol\":1307:1315  a == 'C' */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/RomanToInt.sol\":1307:1327  a == 'C' && b == 'D' */\n      dup1\n      iszero\n      tag_43\n      jumpi\n      pop\n        /* \"contracts/RomanToInt.sol\":1319:1327  b == 'D' */\n      0x4400000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/RomanToInt.sol\":1319:1320  b */\n      dup3\n        /* \"contracts/RomanToInt.sol\":1319:1327  b == 'D' */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/RomanToInt.sol\":1307:1327  a == 'C' && b == 'D' */\n    tag_43:\n        /* \"contracts/RomanToInt.sol\":1303:1339  if (a == 'C' && b == 'D') return 400 */\n      iszero\n      tag_44\n      jumpi\n        /* \"contracts/RomanToInt.sol\":1336:1339  400 */\n      0x0190\n        /* \"contracts/RomanToInt.sol\":1329:1339  return 400 */\n      swap1\n      pop\n      jump(tag_34)\n        /* \"contracts/RomanToInt.sol\":1303:1339  if (a == 'C' && b == 'D') return 400 */\n    tag_44:\n        /* \"contracts/RomanToInt.sol\":1355:1363  a == 'C' */\n      0x4300000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/RomanToInt.sol\":1355:1356  a */\n      dup4\n        /* \"contracts/RomanToInt.sol\":1355:1363  a == 'C' */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/RomanToInt.sol\":1355:1375  a == 'C' && b == 'M' */\n      dup1\n      iszero\n      tag_45\n      jumpi\n      pop\n        /* \"contracts/RomanToInt.sol\":1367:1375  b == 'M' */\n      0x4d00000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/RomanToInt.sol\":1367:1368  b */\n      dup3\n        /* \"contracts/RomanToInt.sol\":1367:1375  b == 'M' */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/RomanToInt.sol\":1355:1375  a == 'C' && b == 'M' */\n    tag_45:\n        /* \"contracts/RomanToInt.sol\":1351:1387  if (a == 'C' && b == 'M') return 900 */\n      iszero\n      tag_46\n      jumpi\n        /* \"contracts/RomanToInt.sol\":1384:1387  900 */\n      0x0384\n        /* \"contracts/RomanToInt.sol\":1377:1387  return 900 */\n      swap1\n      pop\n      jump(tag_34)\n        /* \"contracts/RomanToInt.sol\":1351:1387  if (a == 'C' && b == 'M') return 900 */\n    tag_46:\n        /* \"contracts/RomanToInt.sol\":1406:1407  0 */\n      0x00\n        /* \"contracts/RomanToInt.sol\":1399:1407  return 0 */\n      swap1\n      pop\n        /* \"contracts/RomanToInt.sol\":1034:1415  function getPairValue(bytes1 a, bytes1 b) internal pure returns (uint) {... */\n    tag_34:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/RomanToInt.sol\":665:1026  function getSingleValue(bytes1 s) internal pure returns (uint) {... */\n    tag_30:\n        /* \"contracts/RomanToInt.sol\":722:726  uint */\n      0x00\n        /* \"contracts/RomanToInt.sol\":744:752  s == 'I' */\n      0x4900000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/RomanToInt.sol\":744:745  s */\n      dup3\n        /* \"contracts/RomanToInt.sol\":744:752  s == 'I' */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub\n        /* \"contracts/RomanToInt.sol\":740:762  if (s == 'I') return 1 */\n      tag_48\n      jumpi\n        /* \"contracts/RomanToInt.sol\":761:762  1 */\n      0x01\n        /* \"contracts/RomanToInt.sol\":754:762  return 1 */\n      swap1\n      pop\n      jump(tag_47)\n        /* \"contracts/RomanToInt.sol\":740:762  if (s == 'I') return 1 */\n    tag_48:\n        /* \"contracts/RomanToInt.sol\":778:786  s == 'V' */\n      0x5600000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/RomanToInt.sol\":778:779  s */\n      dup3\n        /* \"contracts/RomanToInt.sol\":778:786  s == 'V' */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub\n        /* \"contracts/RomanToInt.sol\":774:796  if (s == 'V') return 5 */\n      tag_49\n      jumpi\n        /* \"contracts/RomanToInt.sol\":795:796  5 */\n      0x05\n        /* \"contracts/RomanToInt.sol\":788:796  return 5 */\n      swap1\n      pop\n      jump(tag_47)\n        /* \"contracts/RomanToInt.sol\":774:796  if (s == 'V') return 5 */\n    tag_49:\n        /* \"contracts/RomanToInt.sol\":812:820  s == 'X' */\n      0x5800000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/RomanToInt.sol\":812:813  s */\n      dup3\n        /* \"contracts/RomanToInt.sol\":812:820  s == 'X' */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub\n        /* \"contracts/RomanToInt.sol\":808:831  if (s == 'X') return 10 */\n      tag_50\n      jumpi\n        /* \"contracts/RomanToInt.sol\":829:831  10 */\n      0x0a\n        /* \"contracts/RomanToInt.sol\":822:831  return 10 */\n      swap1\n      pop\n      jump(tag_47)\n        /* \"contracts/RomanToInt.sol\":808:831  if (s == 'X') return 10 */\n    tag_50:\n        /* \"contracts/RomanToInt.sol\":847:855  s == 'L' */\n      0x4c00000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/RomanToInt.sol\":847:848  s */\n      dup3\n        /* \"contracts/RomanToInt.sol\":847:855  s == 'L' */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub\n        /* \"contracts/RomanToInt.sol\":843:866  if (s == 'L') return 50 */\n      tag_51\n      jumpi\n        /* \"contracts/RomanToInt.sol\":864:866  50 */\n      0x32\n        /* \"contracts/RomanToInt.sol\":857:866  return 50 */\n      swap1\n      pop\n      jump(tag_47)\n        /* \"contracts/RomanToInt.sol\":843:866  if (s == 'L') return 50 */\n    tag_51:\n        /* \"contracts/RomanToInt.sol\":882:890  s == 'C' */\n      0x4300000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/RomanToInt.sol\":882:883  s */\n      dup3\n        /* \"contracts/RomanToInt.sol\":882:890  s == 'C' */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub\n        /* \"contracts/RomanToInt.sol\":878:902  if (s == 'C') return 100 */\n      tag_52\n      jumpi\n        /* \"contracts/RomanToInt.sol\":899:902  100 */\n      0x64\n        /* \"contracts/RomanToInt.sol\":892:902  return 100 */\n      swap1\n      pop\n      jump(tag_47)\n        /* \"contracts/RomanToInt.sol\":878:902  if (s == 'C') return 100 */\n    tag_52:\n        /* \"contracts/RomanToInt.sol\":918:926  s == 'D' */\n      0x4400000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/RomanToInt.sol\":918:919  s */\n      dup3\n        /* \"contracts/RomanToInt.sol\":918:926  s == 'D' */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub\n        /* \"contracts/RomanToInt.sol\":914:938  if (s == 'D') return 500 */\n      tag_53\n      jumpi\n        /* \"contracts/RomanToInt.sol\":935:938  500 */\n      0x01f4\n        /* \"contracts/RomanToInt.sol\":928:938  return 500 */\n      swap1\n      pop\n      jump(tag_47)\n        /* \"contracts/RomanToInt.sol\":914:938  if (s == 'D') return 500 */\n    tag_53:\n        /* \"contracts/RomanToInt.sol\":954:962  s == 'M' */\n      0x4d00000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/RomanToInt.sol\":954:955  s */\n      dup3\n        /* \"contracts/RomanToInt.sol\":954:962  s == 'M' */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub\n        /* \"contracts/RomanToInt.sol\":950:975  if (s == 'M') return 1000 */\n      tag_54\n      jumpi\n        /* \"contracts/RomanToInt.sol\":971:975  1000 */\n      0x03e8\n        /* \"contracts/RomanToInt.sol\":964:975  return 1000 */\n      swap1\n      pop\n      jump(tag_47)\n        /* \"contracts/RomanToInt.sol\":950:975  if (s == 'M') return 1000 */\n    tag_54:\n        /* \"contracts/RomanToInt.sol\":987:1018  revert(\"Invalid Roman numeral\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/RomanToInt.sol\":665:1026  function getSingleValue(bytes1 s) internal pure returns (uint) {... */\n    tag_47:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_57:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_58:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_59:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:451   */\n    tag_60:\n        /* \"#utility.yul\":443:444   */\n      0x00\n        /* \"#utility.yul\":440:441   */\n      0x00\n        /* \"#utility.yul\":433:445   */\n      revert\n        /* \"#utility.yul\":457:574   */\n    tag_61:\n        /* \"#utility.yul\":566:567   */\n      0x00\n        /* \"#utility.yul\":563:564   */\n      0x00\n        /* \"#utility.yul\":556:568   */\n      revert\n        /* \"#utility.yul\":580:682   */\n    tag_62:\n        /* \"#utility.yul\":621:627   */\n      0x00\n        /* \"#utility.yul\":672:674   */\n      0x1f\n        /* \"#utility.yul\":668:675   */\n      not\n        /* \"#utility.yul\":663:665   */\n      0x1f\n        /* \"#utility.yul\":656:661   */\n      dup4\n        /* \"#utility.yul\":652:666   */\n      add\n        /* \"#utility.yul\":648:676   */\n      and\n        /* \"#utility.yul\":638:676   */\n      swap1\n      pop\n        /* \"#utility.yul\":580:682   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":688:868   */\n    tag_63:\n        /* \"#utility.yul\":736:813   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":733:734   */\n      0x00\n        /* \"#utility.yul\":726:814   */\n      mstore\n        /* \"#utility.yul\":833:837   */\n      0x41\n        /* \"#utility.yul\":830:831   */\n      0x04\n        /* \"#utility.yul\":823:838   */\n      mstore\n        /* \"#utility.yul\":857:861   */\n      0x24\n        /* \"#utility.yul\":854:855   */\n      0x00\n        /* \"#utility.yul\":847:862   */\n      revert\n        /* \"#utility.yul\":874:1155   */\n    tag_64:\n        /* \"#utility.yul\":957:984   */\n      tag_85\n        /* \"#utility.yul\":979:983   */\n      dup3\n        /* \"#utility.yul\":957:984   */\n      tag_62\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":949:955   */\n      dup2\n        /* \"#utility.yul\":945:985   */\n      add\n        /* \"#utility.yul\":1087:1093   */\n      dup2\n        /* \"#utility.yul\":1075:1085   */\n      dup2\n        /* \"#utility.yul\":1072:1094   */\n      lt\n        /* \"#utility.yul\":1051:1069   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1039:1049   */\n      dup3\n        /* \"#utility.yul\":1036:1070   */\n      gt\n        /* \"#utility.yul\":1033:1095   */\n      or\n        /* \"#utility.yul\":1030:1118   */\n      iszero\n      tag_86\n      jumpi\n        /* \"#utility.yul\":1098:1116   */\n      tag_87\n      tag_63\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":1030:1118   */\n    tag_86:\n        /* \"#utility.yul\":1138:1148   */\n      dup1\n        /* \"#utility.yul\":1134:1136   */\n      0x40\n        /* \"#utility.yul\":1127:1149   */\n      mstore\n        /* \"#utility.yul\":917:1155   */\n      pop\n        /* \"#utility.yul\":874:1155   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1161:1290   */\n    tag_65:\n        /* \"#utility.yul\":1195:1201   */\n      0x00\n        /* \"#utility.yul\":1222:1242   */\n      tag_89\n      tag_57\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":1212:1242   */\n      swap1\n      pop\n        /* \"#utility.yul\":1251:1284   */\n      tag_90\n        /* \"#utility.yul\":1279:1283   */\n      dup3\n        /* \"#utility.yul\":1271:1277   */\n      dup3\n        /* \"#utility.yul\":1251:1284   */\n      tag_64\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":1161:1290   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1296:1604   */\n    tag_66:\n        /* \"#utility.yul\":1358:1362   */\n      0x00\n        /* \"#utility.yul\":1448:1466   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1440:1446   */\n      dup3\n        /* \"#utility.yul\":1437:1467   */\n      gt\n        /* \"#utility.yul\":1434:1490   */\n      iszero\n      tag_92\n      jumpi\n        /* \"#utility.yul\":1470:1488   */\n      tag_93\n      tag_63\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":1434:1490   */\n    tag_92:\n        /* \"#utility.yul\":1508:1537   */\n      tag_94\n        /* \"#utility.yul\":1530:1536   */\n      dup3\n        /* \"#utility.yul\":1508:1537   */\n      tag_62\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":1500:1537   */\n      swap1\n      pop\n        /* \"#utility.yul\":1592:1596   */\n      0x20\n        /* \"#utility.yul\":1586:1590   */\n      dup2\n        /* \"#utility.yul\":1582:1597   */\n      add\n        /* \"#utility.yul\":1574:1597   */\n      swap1\n      pop\n        /* \"#utility.yul\":1296:1604   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1610:1758   */\n    tag_67:\n        /* \"#utility.yul\":1708:1714   */\n      dup3\n        /* \"#utility.yul\":1703:1706   */\n      dup2\n        /* \"#utility.yul\":1698:1701   */\n      dup4\n        /* \"#utility.yul\":1685:1715   */\n      calldatacopy\n        /* \"#utility.yul\":1749:1750   */\n      0x00\n        /* \"#utility.yul\":1740:1746   */\n      dup4\n        /* \"#utility.yul\":1735:1738   */\n      dup4\n        /* \"#utility.yul\":1731:1747   */\n      add\n        /* \"#utility.yul\":1724:1751   */\n      mstore\n        /* \"#utility.yul\":1610:1758   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1764:2189   */\n    tag_68:\n        /* \"#utility.yul\":1842:1847   */\n      0x00\n        /* \"#utility.yul\":1867:1933   */\n      tag_97\n        /* \"#utility.yul\":1883:1932   */\n      tag_98\n        /* \"#utility.yul\":1925:1931   */\n      dup5\n        /* \"#utility.yul\":1883:1932   */\n      tag_66\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":1867:1933   */\n      tag_65\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":1858:1933   */\n      swap1\n      pop\n        /* \"#utility.yul\":1956:1962   */\n      dup3\n        /* \"#utility.yul\":1949:1954   */\n      dup2\n        /* \"#utility.yul\":1942:1963   */\n      mstore\n        /* \"#utility.yul\":1994:1998   */\n      0x20\n        /* \"#utility.yul\":1987:1992   */\n      dup2\n        /* \"#utility.yul\":1983:1999   */\n      add\n        /* \"#utility.yul\":2032:2035   */\n      dup5\n        /* \"#utility.yul\":2023:2029   */\n      dup5\n        /* \"#utility.yul\":2018:2021   */\n      dup5\n        /* \"#utility.yul\":2014:2030   */\n      add\n        /* \"#utility.yul\":2011:2036   */\n      gt\n        /* \"#utility.yul\":2008:2120   */\n      iszero\n      tag_99\n      jumpi\n        /* \"#utility.yul\":2039:2118   */\n      tag_100\n      tag_61\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":2008:2120   */\n    tag_99:\n        /* \"#utility.yul\":2129:2183   */\n      tag_101\n        /* \"#utility.yul\":2176:2182   */\n      dup5\n        /* \"#utility.yul\":2171:2174   */\n      dup3\n        /* \"#utility.yul\":2166:2169   */\n      dup6\n        /* \"#utility.yul\":2129:2183   */\n      tag_67\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":1848:2189   */\n      pop\n        /* \"#utility.yul\":1764:2189   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2209:2549   */\n    tag_69:\n        /* \"#utility.yul\":2265:2270   */\n      0x00\n        /* \"#utility.yul\":2314:2317   */\n      dup3\n        /* \"#utility.yul\":2307:2311   */\n      0x1f\n        /* \"#utility.yul\":2299:2305   */\n      dup4\n        /* \"#utility.yul\":2295:2312   */\n      add\n        /* \"#utility.yul\":2291:2318   */\n      slt\n        /* \"#utility.yul\":2281:2403   */\n      tag_103\n      jumpi\n        /* \"#utility.yul\":2322:2401   */\n      tag_104\n      tag_60\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":2281:2403   */\n    tag_103:\n        /* \"#utility.yul\":2439:2445   */\n      dup2\n        /* \"#utility.yul\":2426:2446   */\n      calldataload\n        /* \"#utility.yul\":2464:2543   */\n      tag_105\n        /* \"#utility.yul\":2539:2542   */\n      dup5\n        /* \"#utility.yul\":2531:2537   */\n      dup3\n        /* \"#utility.yul\":2524:2528   */\n      0x20\n        /* \"#utility.yul\":2516:2522   */\n      dup7\n        /* \"#utility.yul\":2512:2529   */\n      add\n        /* \"#utility.yul\":2464:2543   */\n      tag_68\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":2455:2543   */\n      swap2\n      pop\n        /* \"#utility.yul\":2271:2549   */\n      pop\n        /* \"#utility.yul\":2209:2549   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2555:3064   */\n    tag_6:\n        /* \"#utility.yul\":2624:2630   */\n      0x00\n        /* \"#utility.yul\":2673:2675   */\n      0x20\n        /* \"#utility.yul\":2661:2670   */\n      dup3\n        /* \"#utility.yul\":2652:2659   */\n      dup5\n        /* \"#utility.yul\":2648:2671   */\n      sub\n        /* \"#utility.yul\":2644:2676   */\n      slt\n        /* \"#utility.yul\":2641:2760   */\n      iszero\n      tag_107\n      jumpi\n        /* \"#utility.yul\":2679:2758   */\n      tag_108\n      tag_58\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":2641:2760   */\n    tag_107:\n        /* \"#utility.yul\":2827:2828   */\n      0x00\n        /* \"#utility.yul\":2816:2825   */\n      dup3\n        /* \"#utility.yul\":2812:2829   */\n      add\n        /* \"#utility.yul\":2799:2830   */\n      calldataload\n        /* \"#utility.yul\":2857:2875   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2849:2855   */\n      dup2\n        /* \"#utility.yul\":2846:2876   */\n      gt\n        /* \"#utility.yul\":2843:2960   */\n      iszero\n      tag_109\n      jumpi\n        /* \"#utility.yul\":2879:2958   */\n      tag_110\n      tag_59\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":2843:2960   */\n    tag_109:\n        /* \"#utility.yul\":2984:3047   */\n      tag_111\n        /* \"#utility.yul\":3039:3046   */\n      dup5\n        /* \"#utility.yul\":3030:3036   */\n      dup3\n        /* \"#utility.yul\":3019:3028   */\n      dup6\n        /* \"#utility.yul\":3015:3037   */\n      add\n        /* \"#utility.yul\":2984:3047   */\n      tag_69\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":2974:3047   */\n      swap2\n      pop\n        /* \"#utility.yul\":2770:3057   */\n      pop\n        /* \"#utility.yul\":2555:3064   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3070:3147   */\n    tag_70:\n        /* \"#utility.yul\":3107:3114   */\n      0x00\n        /* \"#utility.yul\":3136:3141   */\n      dup2\n        /* \"#utility.yul\":3125:3141   */\n      swap1\n      pop\n        /* \"#utility.yul\":3070:3147   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3153:3271   */\n    tag_71:\n        /* \"#utility.yul\":3240:3264   */\n      tag_114\n        /* \"#utility.yul\":3258:3263   */\n      dup2\n        /* \"#utility.yul\":3240:3264   */\n      tag_70\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":3235:3238   */\n      dup3\n        /* \"#utility.yul\":3228:3265   */\n      mstore\n        /* \"#utility.yul\":3153:3271   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3277:3499   */\n    tag_9:\n        /* \"#utility.yul\":3370:3374   */\n      0x00\n        /* \"#utility.yul\":3408:3410   */\n      0x20\n        /* \"#utility.yul\":3397:3406   */\n      dup3\n        /* \"#utility.yul\":3393:3411   */\n      add\n        /* \"#utility.yul\":3385:3411   */\n      swap1\n      pop\n        /* \"#utility.yul\":3421:3492   */\n      tag_116\n        /* \"#utility.yul\":3489:3490   */\n      0x00\n        /* \"#utility.yul\":3478:3487   */\n      dup4\n        /* \"#utility.yul\":3474:3491   */\n      add\n        /* \"#utility.yul\":3465:3471   */\n      dup5\n        /* \"#utility.yul\":3421:3492   */\n      tag_71\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":3277:3499   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3505:3685   */\n    tag_72:\n        /* \"#utility.yul\":3553:3630   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3550:3551   */\n      0x00\n        /* \"#utility.yul\":3543:3631   */\n      mstore\n        /* \"#utility.yul\":3650:3654   */\n      0x11\n        /* \"#utility.yul\":3647:3648   */\n      0x04\n        /* \"#utility.yul\":3640:3655   */\n      mstore\n        /* \"#utility.yul\":3674:3678   */\n      0x24\n        /* \"#utility.yul\":3671:3672   */\n      0x00\n        /* \"#utility.yul\":3664:3679   */\n      revert\n        /* \"#utility.yul\":3691:3882   */\n    tag_14:\n        /* \"#utility.yul\":3731:3734   */\n      0x00\n        /* \"#utility.yul\":3750:3770   */\n      tag_119\n        /* \"#utility.yul\":3768:3769   */\n      dup3\n        /* \"#utility.yul\":3750:3770   */\n      tag_70\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":3745:3770   */\n      swap2\n      pop\n        /* \"#utility.yul\":3784:3804   */\n      tag_120\n        /* \"#utility.yul\":3802:3803   */\n      dup4\n        /* \"#utility.yul\":3784:3804   */\n      tag_70\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":3779:3804   */\n      swap3\n      pop\n        /* \"#utility.yul\":3827:3828   */\n      dup3\n        /* \"#utility.yul\":3824:3825   */\n      dup3\n        /* \"#utility.yul\":3820:3829   */\n      add\n        /* \"#utility.yul\":3813:3829   */\n      swap1\n      pop\n        /* \"#utility.yul\":3848:3851   */\n      dup1\n        /* \"#utility.yul\":3845:3846   */\n      dup3\n        /* \"#utility.yul\":3842:3852   */\n      gt\n        /* \"#utility.yul\":3839:3875   */\n      iszero\n      tag_121\n      jumpi\n        /* \"#utility.yul\":3855:3873   */\n      tag_122\n      tag_72\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":3839:3875   */\n    tag_121:\n        /* \"#utility.yul\":3691:3882   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3888:4068   */\n    tag_19:\n        /* \"#utility.yul\":3936:4013   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3933:3934   */\n      0x00\n        /* \"#utility.yul\":3926:4014   */\n      mstore\n        /* \"#utility.yul\":4033:4037   */\n      0x32\n        /* \"#utility.yul\":4030:4031   */\n      0x04\n        /* \"#utility.yul\":4023:4038   */\n      mstore\n        /* \"#utility.yul\":4057:4061   */\n      0x24\n        /* \"#utility.yul\":4054:4055   */\n      0x00\n        /* \"#utility.yul\":4047:4062   */\n      revert\n        /* \"#utility.yul\":4074:4307   */\n    tag_33:\n        /* \"#utility.yul\":4113:4116   */\n      0x00\n        /* \"#utility.yul\":4136:4160   */\n      tag_125\n        /* \"#utility.yul\":4154:4159   */\n      dup3\n        /* \"#utility.yul\":4136:4160   */\n      tag_70\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":4127:4160   */\n      swap2\n      pop\n        /* \"#utility.yul\":4182:4248   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4175:4180   */\n      dup3\n        /* \"#utility.yul\":4172:4249   */\n      sub\n        /* \"#utility.yul\":4169:4272   */\n      tag_126\n      jumpi\n        /* \"#utility.yul\":4252:4270   */\n      tag_127\n      tag_72\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":4169:4272   */\n    tag_126:\n        /* \"#utility.yul\":4299:4300   */\n      0x01\n        /* \"#utility.yul\":4292:4297   */\n      dup3\n        /* \"#utility.yul\":4288:4301   */\n      add\n        /* \"#utility.yul\":4281:4301   */\n      swap1\n      pop\n        /* \"#utility.yul\":4074:4307   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4313:4482   */\n    tag_73:\n        /* \"#utility.yul\":4397:4408   */\n      0x00\n        /* \"#utility.yul\":4431:4437   */\n      dup3\n        /* \"#utility.yul\":4426:4429   */\n      dup3\n        /* \"#utility.yul\":4419:4438   */\n      mstore\n        /* \"#utility.yul\":4471:4475   */\n      0x20\n        /* \"#utility.yul\":4466:4469   */\n      dup3\n        /* \"#utility.yul\":4462:4476   */\n      add\n        /* \"#utility.yul\":4447:4476   */\n      swap1\n      pop\n        /* \"#utility.yul\":4313:4482   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4488:4659   */\n    tag_74:\n        /* \"#utility.yul\":4628:4651   */\n      0x496e76616c696420526f6d616e206e756d6572616c0000000000000000000000\n        /* \"#utility.yul\":4624:4625   */\n      0x00\n        /* \"#utility.yul\":4616:4622   */\n      dup3\n        /* \"#utility.yul\":4612:4626   */\n      add\n        /* \"#utility.yul\":4605:4652   */\n      mstore\n        /* \"#utility.yul\":4488:4659   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4665:5031   */\n    tag_75:\n        /* \"#utility.yul\":4807:4810   */\n      0x00\n        /* \"#utility.yul\":4828:4895   */\n      tag_131\n        /* \"#utility.yul\":4892:4894   */\n      0x15\n        /* \"#utility.yul\":4887:4890   */\n      dup4\n        /* \"#utility.yul\":4828:4895   */\n      tag_73\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":4821:4895   */\n      swap2\n      pop\n        /* \"#utility.yul\":4904:4997   */\n      tag_132\n        /* \"#utility.yul\":4993:4996   */\n      dup3\n        /* \"#utility.yul\":4904:4997   */\n      tag_74\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":5022:5024   */\n      0x20\n        /* \"#utility.yul\":5017:5020   */\n      dup3\n        /* \"#utility.yul\":5013:5025   */\n      add\n        /* \"#utility.yul\":5006:5025   */\n      swap1\n      pop\n        /* \"#utility.yul\":4665:5031   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5037:5456   */\n    tag_56:\n        /* \"#utility.yul\":5203:5207   */\n      0x00\n        /* \"#utility.yul\":5241:5243   */\n      0x20\n        /* \"#utility.yul\":5230:5239   */\n      dup3\n        /* \"#utility.yul\":5226:5244   */\n      add\n        /* \"#utility.yul\":5218:5244   */\n      swap1\n      pop\n        /* \"#utility.yul\":5290:5299   */\n      dup2\n        /* \"#utility.yul\":5284:5288   */\n      dup2\n        /* \"#utility.yul\":5280:5300   */\n      sub\n        /* \"#utility.yul\":5276:5277   */\n      0x00\n        /* \"#utility.yul\":5265:5274   */\n      dup4\n        /* \"#utility.yul\":5261:5278   */\n      add\n        /* \"#utility.yul\":5254:5301   */\n      mstore\n        /* \"#utility.yul\":5318:5449   */\n      tag_134\n        /* \"#utility.yul\":5444:5448   */\n      dup2\n        /* \"#utility.yul\":5318:5449   */\n      tag_75\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":5310:5449   */\n      swap1\n      pop\n        /* \"#utility.yul\":5037:5456   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122069bc787606fa994bba709d010bef4e4ec122c965ebd0907544ed1f74d9aec18064736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b50610af28061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610029575f3560e01c8063cb159dfe1461002d575b5f5ffd5b610047600480360381019061004291906108f8565b61005d565b6040516100549190610957565b60405180910390f35b5f5f8290505f815190505f5f90505f5f90505b828110156101515782600182610086919061099d565b101561010b575f6100dd8583815181106100a3576100a26109d0565b5b602001015160f81c60f81b866001856100bc919061099d565b815181106100cd576100cc6109d0565b5b602001015160f81c60f81b61015d565b90505f81146101095780836100f2919061099d565b9250600282610101919061099d565b915050610070565b505b610131848281518110610121576101206109d0565b5b602001015160f81c60f81b61052a565b8261013c919061099d565b91508080610149906109fd565b915050610070565b81945050505050919050565b5f7f4900000000000000000000000000000000000000000000000000000000000000837effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480156101f057507f5600000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b156101fe5760049050610524565b7f4900000000000000000000000000000000000000000000000000000000000000837effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614801561029057507f5800000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b1561029e5760099050610524565b7f5800000000000000000000000000000000000000000000000000000000000000837effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614801561033057507f4c00000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b1561033e5760289050610524565b7f5800000000000000000000000000000000000000000000000000000000000000837effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480156103d057507f4300000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b156103de57605a9050610524565b7f4300000000000000000000000000000000000000000000000000000000000000837effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614801561047057507f4400000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b1561047f576101909050610524565b7f4300000000000000000000000000000000000000000000000000000000000000837effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614801561051157507f4d00000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b15610520576103849050610524565b5f90505b92915050565b5f7f4900000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361057d57600190506107a6565b7f5600000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916036105cf57600590506107a6565b7f5800000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361062157600a90506107a6565b7f4c00000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361067357603290506107a6565b7f4300000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916036106c557606490506107a6565b7f4400000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191603610718576101f490506107a6565b7f4d00000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361076b576103e890506107a6565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079d90610a9e565b60405180910390fd5b919050565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61080a826107c4565b810181811067ffffffffffffffff82111715610829576108286107d4565b5b80604052505050565b5f61083b6107ab565b90506108478282610801565b919050565b5f67ffffffffffffffff821115610866576108656107d4565b5b61086f826107c4565b9050602081019050919050565b828183375f83830152505050565b5f61089c6108978461084c565b610832565b9050828152602081018484840111156108b8576108b76107c0565b5b6108c384828561087c565b509392505050565b5f82601f8301126108df576108de6107bc565b5b81356108ef84826020860161088a565b91505092915050565b5f6020828403121561090d5761090c6107b4565b5b5f82013567ffffffffffffffff81111561092a576109296107b8565b5b610936848285016108cb565b91505092915050565b5f819050919050565b6109518161093f565b82525050565b5f60208201905061096a5f830184610948565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6109a78261093f565b91506109b28361093f565b92508282019050808211156109ca576109c9610970565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f610a078261093f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a3957610a38610970565b5b600182019050919050565b5f82825260208201905092915050565b7f496e76616c696420526f6d616e206e756d6572616c00000000000000000000005f82015250565b5f610a88601583610a44565b9150610a9382610a54565b602082019050919050565b5f6020820190508181035f830152610ab581610a7c565b905091905056fea264697066735822122069bc787606fa994bba709d010bef4e4ec122c965ebd0907544ed1f74d9aec18064736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xAF2 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCB159DFE EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x8F8 JUMP JUMPDEST PUSH2 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54 SWAP2 SWAP1 PUSH2 0x957 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 DUP3 SWAP1 POP PUSH0 DUP2 MLOAD SWAP1 POP PUSH0 PUSH0 SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x151 JUMPI DUP3 PUSH1 0x1 DUP3 PUSH2 0x86 SWAP2 SWAP1 PUSH2 0x99D JUMP JUMPDEST LT ISZERO PUSH2 0x10B JUMPI PUSH0 PUSH2 0xDD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xA3 JUMPI PUSH2 0xA2 PUSH2 0x9D0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP7 PUSH1 0x1 DUP6 PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x99D JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xCD JUMPI PUSH2 0xCC PUSH2 0x9D0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH2 0x15D JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 EQ PUSH2 0x109 JUMPI DUP1 DUP4 PUSH2 0xF2 SWAP2 SWAP1 PUSH2 0x99D JUMP JUMPDEST SWAP3 POP PUSH1 0x2 DUP3 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x99D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x70 JUMP JUMPDEST POP JUMPDEST PUSH2 0x131 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x121 JUMPI PUSH2 0x120 PUSH2 0x9D0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH2 0x52A JUMP JUMPDEST DUP3 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x99D JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x149 SWAP1 PUSH2 0x9FD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x70 JUMP JUMPDEST DUP2 SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x4900000000000000000000000000000000000000000000000000000000000000 DUP4 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 ISZERO PUSH2 0x1F0 JUMPI POP PUSH32 0x5600000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST ISZERO PUSH2 0x1FE JUMPI PUSH1 0x4 SWAP1 POP PUSH2 0x524 JUMP JUMPDEST PUSH32 0x4900000000000000000000000000000000000000000000000000000000000000 DUP4 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 ISZERO PUSH2 0x290 JUMPI POP PUSH32 0x5800000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST ISZERO PUSH2 0x29E JUMPI PUSH1 0x9 SWAP1 POP PUSH2 0x524 JUMP JUMPDEST PUSH32 0x5800000000000000000000000000000000000000000000000000000000000000 DUP4 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 ISZERO PUSH2 0x330 JUMPI POP PUSH32 0x4C00000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST ISZERO PUSH2 0x33E JUMPI PUSH1 0x28 SWAP1 POP PUSH2 0x524 JUMP JUMPDEST PUSH32 0x5800000000000000000000000000000000000000000000000000000000000000 DUP4 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 ISZERO PUSH2 0x3D0 JUMPI POP PUSH32 0x4300000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST ISZERO PUSH2 0x3DE JUMPI PUSH1 0x5A SWAP1 POP PUSH2 0x524 JUMP JUMPDEST PUSH32 0x4300000000000000000000000000000000000000000000000000000000000000 DUP4 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 ISZERO PUSH2 0x470 JUMPI POP PUSH32 0x4400000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST ISZERO PUSH2 0x47F JUMPI PUSH2 0x190 SWAP1 POP PUSH2 0x524 JUMP JUMPDEST PUSH32 0x4300000000000000000000000000000000000000000000000000000000000000 DUP4 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 ISZERO PUSH2 0x511 JUMPI POP PUSH32 0x4D00000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST ISZERO PUSH2 0x520 JUMPI PUSH2 0x384 SWAP1 POP PUSH2 0x524 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x4900000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x57D JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x7A6 JUMP JUMPDEST PUSH32 0x5600000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x5CF JUMPI PUSH1 0x5 SWAP1 POP PUSH2 0x7A6 JUMP JUMPDEST PUSH32 0x5800000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x621 JUMPI PUSH1 0xA SWAP1 POP PUSH2 0x7A6 JUMP JUMPDEST PUSH32 0x4C00000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x673 JUMPI PUSH1 0x32 SWAP1 POP PUSH2 0x7A6 JUMP JUMPDEST PUSH32 0x4300000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x6C5 JUMPI PUSH1 0x64 SWAP1 POP PUSH2 0x7A6 JUMP JUMPDEST PUSH32 0x4400000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x718 JUMPI PUSH2 0x1F4 SWAP1 POP PUSH2 0x7A6 JUMP JUMPDEST PUSH32 0x4D00000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x76B JUMPI PUSH2 0x3E8 SWAP1 POP PUSH2 0x7A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79D SWAP1 PUSH2 0xA9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x80A DUP3 PUSH2 0x7C4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x829 JUMPI PUSH2 0x828 PUSH2 0x7D4 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x83B PUSH2 0x7AB JUMP JUMPDEST SWAP1 POP PUSH2 0x847 DUP3 DUP3 PUSH2 0x801 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x866 JUMPI PUSH2 0x865 PUSH2 0x7D4 JUMP JUMPDEST JUMPDEST PUSH2 0x86F DUP3 PUSH2 0x7C4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x89C PUSH2 0x897 DUP5 PUSH2 0x84C JUMP JUMPDEST PUSH2 0x832 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x8B8 JUMPI PUSH2 0x8B7 PUSH2 0x7C0 JUMP JUMPDEST JUMPDEST PUSH2 0x8C3 DUP5 DUP3 DUP6 PUSH2 0x87C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x8DF JUMPI PUSH2 0x8DE PUSH2 0x7BC JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x8EF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x88A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x90D JUMPI PUSH2 0x90C PUSH2 0x7B4 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x92A JUMPI PUSH2 0x929 PUSH2 0x7B8 JUMP JUMPDEST JUMPDEST PUSH2 0x936 DUP5 DUP3 DUP6 ADD PUSH2 0x8CB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x951 DUP2 PUSH2 0x93F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x96A PUSH0 DUP4 ADD DUP5 PUSH2 0x948 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x9A7 DUP3 PUSH2 0x93F JUMP JUMPDEST SWAP2 POP PUSH2 0x9B2 DUP4 PUSH2 0x93F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x9CA JUMPI PUSH2 0x9C9 PUSH2 0x970 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xA07 DUP3 PUSH2 0x93F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xA39 JUMPI PUSH2 0xA38 PUSH2 0x970 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420526F6D616E206E756D6572616C0000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA88 PUSH1 0x15 DUP4 PUSH2 0xA44 JUMP JUMPDEST SWAP2 POP PUSH2 0xA93 DUP3 PUSH2 0xA54 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xAB5 DUP2 PUSH2 0xA7C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xBC787606FA994BBA709D ADD SIGNEXTEND 0xEF 0x4E 0x4E 0xC1 0x22 0xC9 PUSH6 0xEBD0907544ED 0x1F PUSH21 0xD9AEC18064736F6C634300081E0033000000000000 ",
							"sourceMap": "58:1364:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getPairValue_207": {
									"entryPoint": 349,
									"id": 207,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getSingleValue_135": {
									"entryPoint": 1322,
									"id": 135,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@romanToInt_81": {
									"entryPoint": 93,
									"id": 81,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 2186,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 2251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 2296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_443bcbedec6bfd11bf3f7c2e4d7a61e94bd9a8c86ae5e8725cce10dbcb4bb336_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2684,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_443bcbedec6bfd11bf3f7c2e4d7a61e94bd9a8c86ae5e8725cce10dbcb4bb336__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2718,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 2098,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1963,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 2124,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2461,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2367,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 2172,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 2049,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 2557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2416,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 2512,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2004,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1980,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1984,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1976,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1972,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1988,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_443bcbedec6bfd11bf3f7c2e4d7a61e94bd9a8c86ae5e8725cce10dbcb4bb336": {
									"entryPoint": 2644,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5459:1",
										"nodeType": "YulBlock",
										"src": "0:5459:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "423:28:1",
													"nodeType": "YulBlock",
													"src": "423:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:1",
																		"nodeType": "YulLiteral",
																		"src": "440:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:1",
																		"nodeType": "YulLiteral",
																		"src": "443:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:1"
																},
																"nativeSrc": "433:12:1",
																"nodeType": "YulFunctionCall",
																"src": "433:12:1"
															},
															"nativeSrc": "433:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:1"
											},
											{
												"body": {
													"nativeSrc": "546:28:1",
													"nodeType": "YulBlock",
													"src": "546:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:1",
																		"nodeType": "YulLiteral",
																		"src": "563:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:1",
																		"nodeType": "YulLiteral",
																		"src": "566:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:1"
																},
																"nativeSrc": "556:12:1",
																"nodeType": "YulFunctionCall",
																"src": "556:12:1"
															},
															"nativeSrc": "556:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:1"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:1"
											},
											{
												"body": {
													"nativeSrc": "628:54:1",
													"nodeType": "YulBlock",
													"src": "628:54:1",
													"statements": [
														{
															"nativeSrc": "638:38:1",
															"nodeType": "YulAssignment",
															"src": "638:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:1",
																				"nodeType": "YulLiteral",
																				"src": "663:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:1"
																		},
																		"nativeSrc": "652:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:1",
																				"nodeType": "YulLiteral",
																				"src": "672:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:1"
																		},
																		"nativeSrc": "668:7:1",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:1"
																},
																"nativeSrc": "648:28:1",
																"nodeType": "YulFunctionCall",
																"src": "648:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:1",
														"nodeType": "YulTypedName",
														"src": "611:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:1",
														"nodeType": "YulTypedName",
														"src": "621:6:1",
														"type": ""
													}
												],
												"src": "580:102:1"
											},
											{
												"body": {
													"nativeSrc": "716:152:1",
													"nodeType": "YulBlock",
													"src": "716:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:1",
																		"nodeType": "YulLiteral",
																		"src": "733:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:1",
																		"nodeType": "YulLiteral",
																		"src": "736:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:1"
																},
																"nativeSrc": "726:88:1",
																"nodeType": "YulFunctionCall",
																"src": "726:88:1"
															},
															"nativeSrc": "726:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:1",
																		"nodeType": "YulLiteral",
																		"src": "830:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:1",
																		"nodeType": "YulLiteral",
																		"src": "833:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:1"
																},
																"nativeSrc": "823:15:1",
																"nodeType": "YulFunctionCall",
																"src": "823:15:1"
															},
															"nativeSrc": "823:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:1",
																		"nodeType": "YulLiteral",
																		"src": "854:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:1",
																		"nodeType": "YulLiteral",
																		"src": "857:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:1"
																},
																"nativeSrc": "847:15:1",
																"nodeType": "YulFunctionCall",
																"src": "847:15:1"
															},
															"nativeSrc": "847:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:1"
											},
											{
												"body": {
													"nativeSrc": "917:238:1",
													"nodeType": "YulBlock",
													"src": "917:238:1",
													"statements": [
														{
															"nativeSrc": "927:58:1",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:1"
																		},
																		"nativeSrc": "957:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:1"
																},
																"nativeSrc": "945:40:1",
																"nodeType": "YulFunctionCall",
																"src": "945:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:1",
																	"nodeType": "YulTypedName",
																	"src": "931:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:1",
																"nodeType": "YulBlock",
																"src": "1096:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:1"
																			},
																			"nativeSrc": "1098:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:1"
																		},
																		"nativeSrc": "1098:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:1",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:1"
																		},
																		"nativeSrc": "1036:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:1"
																		},
																		"nativeSrc": "1072:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:1"
																},
																"nativeSrc": "1033:62:1",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:1"
															},
															"nativeSrc": "1030:88:1",
															"nodeType": "YulIf",
															"src": "1030:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:1"
																},
																"nativeSrc": "1127:22:1",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:1"
															},
															"nativeSrc": "1127:22:1",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:1",
														"nodeType": "YulTypedName",
														"src": "903:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:1",
														"nodeType": "YulTypedName",
														"src": "911:4:1",
														"type": ""
													}
												],
												"src": "874:281:1"
											},
											{
												"body": {
													"nativeSrc": "1202:88:1",
													"nodeType": "YulBlock",
													"src": "1202:88:1",
													"statements": [
														{
															"nativeSrc": "1212:30:1",
															"nodeType": "YulAssignment",
															"src": "1212:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:1"
																},
																"nativeSrc": "1222:20:1",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:1"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:1",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:1"
																},
																"nativeSrc": "1251:33:1",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:1"
															},
															"nativeSrc": "1251:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:1",
														"nodeType": "YulTypedName",
														"src": "1186:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:1",
														"nodeType": "YulTypedName",
														"src": "1195:6:1",
														"type": ""
													}
												],
												"src": "1161:129:1"
											},
											{
												"body": {
													"nativeSrc": "1363:241:1",
													"nodeType": "YulBlock",
													"src": "1363:241:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:1",
																"nodeType": "YulBlock",
																"src": "1468:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:1"
																			},
																			"nativeSrc": "1470:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:1"
																		},
																		"nativeSrc": "1470:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:1",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:1"
																},
																"nativeSrc": "1437:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:1"
															},
															"nativeSrc": "1434:56:1",
															"nodeType": "YulIf",
															"src": "1434:56:1"
														},
														{
															"nativeSrc": "1500:37:1",
															"nodeType": "YulAssignment",
															"src": "1500:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:1"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:1",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:1"
																},
																"nativeSrc": "1508:29:1",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:1"
																}
															]
														},
														{
															"nativeSrc": "1574:23:1",
															"nodeType": "YulAssignment",
															"src": "1574:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:1"
																},
																"nativeSrc": "1582:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:1",
														"nodeType": "YulTypedName",
														"src": "1347:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:1",
														"nodeType": "YulTypedName",
														"src": "1358:4:1",
														"type": ""
													}
												],
												"src": "1296:308:1"
											},
											{
												"body": {
													"nativeSrc": "1674:84:1",
													"nodeType": "YulBlock",
													"src": "1674:84:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1698:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1698:3:1"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1703:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1703:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1708:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1708:6:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "1685:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1685:12:1"
																},
																"nativeSrc": "1685:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1685:30:1"
															},
															"nativeSrc": "1685:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "1685:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1735:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1735:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1740:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1740:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1731:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1731:3:1"
																		},
																		"nativeSrc": "1731:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1731:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1749:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1749:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1724:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1724:6:1"
																},
																"nativeSrc": "1724:27:1",
																"nodeType": "YulFunctionCall",
																"src": "1724:27:1"
															},
															"nativeSrc": "1724:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "1724:27:1"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "1610:148:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1656:3:1",
														"nodeType": "YulTypedName",
														"src": "1656:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1661:3:1",
														"nodeType": "YulTypedName",
														"src": "1661:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1666:6:1",
														"nodeType": "YulTypedName",
														"src": "1666:6:1",
														"type": ""
													}
												],
												"src": "1610:148:1"
											},
											{
												"body": {
													"nativeSrc": "1848:341:1",
													"nodeType": "YulBlock",
													"src": "1848:341:1",
													"statements": [
														{
															"nativeSrc": "1858:75:1",
															"nodeType": "YulAssignment",
															"src": "1858:75:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1925:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1925:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1883:41:1",
																			"nodeType": "YulIdentifier",
																			"src": "1883:41:1"
																		},
																		"nativeSrc": "1883:49:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1883:49:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1867:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "1867:15:1"
																},
																"nativeSrc": "1867:66:1",
																"nodeType": "YulFunctionCall",
																"src": "1867:66:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1858:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1858:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1949:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1949:5:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1956:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1956:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1942:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1942:6:1"
																},
																"nativeSrc": "1942:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1942:21:1"
															},
															"nativeSrc": "1942:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "1942:21:1"
														},
														{
															"nativeSrc": "1972:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1972:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1987:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1987:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1994:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1994:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1983:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:1"
																},
																"nativeSrc": "1983:16:1",
																"nodeType": "YulFunctionCall",
																"src": "1983:16:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1976:3:1",
																	"nodeType": "YulTypedName",
																	"src": "1976:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2037:83:1",
																"nodeType": "YulBlock",
																"src": "2037:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2039:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "2039:77:1"
																			},
																			"nativeSrc": "2039:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2039:79:1"
																		},
																		"nativeSrc": "2039:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2039:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2018:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2018:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2023:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2023:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2014:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2014:3:1"
																		},
																		"nativeSrc": "2014:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2014:16:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2032:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2032:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2011:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2011:2:1"
																},
																"nativeSrc": "2011:25:1",
																"nodeType": "YulFunctionCall",
																"src": "2011:25:1"
															},
															"nativeSrc": "2008:112:1",
															"nodeType": "YulIf",
															"src": "2008:112:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:1"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "2129:36:1",
																	"nodeType": "YulIdentifier",
																	"src": "2129:36:1"
																},
																"nativeSrc": "2129:54:1",
																"nodeType": "YulFunctionCall",
																"src": "2129:54:1"
															},
															"nativeSrc": "2129:54:1",
															"nodeType": "YulExpressionStatement",
															"src": "2129:54:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "1764:425:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1821:3:1",
														"nodeType": "YulTypedName",
														"src": "1821:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1826:6:1",
														"nodeType": "YulTypedName",
														"src": "1826:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1834:3:1",
														"nodeType": "YulTypedName",
														"src": "1834:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1842:5:1",
														"nodeType": "YulTypedName",
														"src": "1842:5:1",
														"type": ""
													}
												],
												"src": "1764:425:1"
											},
											{
												"body": {
													"nativeSrc": "2271:278:1",
													"nodeType": "YulBlock",
													"src": "2271:278:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2320:83:1",
																"nodeType": "YulBlock",
																"src": "2320:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2322:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "2322:77:1"
																			},
																			"nativeSrc": "2322:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2322:79:1"
																		},
																		"nativeSrc": "2322:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2322:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2299:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2299:6:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2307:4:1",
																						"nodeType": "YulLiteral",
																						"src": "2307:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2295:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2295:3:1"
																				},
																				"nativeSrc": "2295:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2295:17:1"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2314:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2314:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2291:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2291:3:1"
																		},
																		"nativeSrc": "2291:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2291:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2284:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2284:6:1"
																},
																"nativeSrc": "2284:35:1",
																"nodeType": "YulFunctionCall",
																"src": "2284:35:1"
															},
															"nativeSrc": "2281:122:1",
															"nodeType": "YulIf",
															"src": "2281:122:1"
														},
														{
															"nativeSrc": "2412:34:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2412:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2439:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2439:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2426:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2426:12:1"
																},
																"nativeSrc": "2426:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2426:20:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2416:6:1",
																	"nodeType": "YulTypedName",
																	"src": "2416:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2455:88:1",
															"nodeType": "YulAssignment",
															"src": "2455:88:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2516:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2516:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2524:4:1",
																				"nodeType": "YulLiteral",
																				"src": "2524:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2512:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2512:3:1"
																		},
																		"nativeSrc": "2512:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2512:17:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2531:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2531:6:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2539:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2539:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "2464:47:1",
																	"nodeType": "YulIdentifier",
																	"src": "2464:47:1"
																},
																"nativeSrc": "2464:79:1",
																"nodeType": "YulFunctionCall",
																"src": "2464:79:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2455:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2455:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "2209:340:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2249:6:1",
														"nodeType": "YulTypedName",
														"src": "2249:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2257:3:1",
														"nodeType": "YulTypedName",
														"src": "2257:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2265:5:1",
														"nodeType": "YulTypedName",
														"src": "2265:5:1",
														"type": ""
													}
												],
												"src": "2209:340:1"
											},
											{
												"body": {
													"nativeSrc": "2631:433:1",
													"nodeType": "YulBlock",
													"src": "2631:433:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2677:83:1",
																"nodeType": "YulBlock",
																"src": "2677:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2679:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "2679:77:1"
																			},
																			"nativeSrc": "2679:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2679:79:1"
																		},
																		"nativeSrc": "2679:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2679:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2652:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2652:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2661:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2661:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2648:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2648:3:1"
																		},
																		"nativeSrc": "2648:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2648:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2673:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2673:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2644:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2644:3:1"
																},
																"nativeSrc": "2644:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2644:32:1"
															},
															"nativeSrc": "2641:119:1",
															"nodeType": "YulIf",
															"src": "2641:119:1"
														},
														{
															"nativeSrc": "2770:287:1",
															"nodeType": "YulBlock",
															"src": "2770:287:1",
															"statements": [
																{
																	"nativeSrc": "2785:45:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2785:45:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2816:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2816:9:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2827:1:1",
																						"nodeType": "YulLiteral",
																						"src": "2827:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2812:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2812:3:1"
																				},
																				"nativeSrc": "2812:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2812:17:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "2799:12:1",
																			"nodeType": "YulIdentifier",
																			"src": "2799:12:1"
																		},
																		"nativeSrc": "2799:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2799:31:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2789:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2789:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "2877:83:1",
																		"nodeType": "YulBlock",
																		"src": "2877:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "2879:77:1",
																						"nodeType": "YulIdentifier",
																						"src": "2879:77:1"
																					},
																					"nativeSrc": "2879:79:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2879:79:1"
																				},
																				"nativeSrc": "2879:79:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "2879:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2849:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2849:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2857:18:1",
																				"nodeType": "YulLiteral",
																				"src": "2857:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2846:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2846:2:1"
																		},
																		"nativeSrc": "2846:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2846:30:1"
																	},
																	"nativeSrc": "2843:117:1",
																	"nodeType": "YulIf",
																	"src": "2843:117:1"
																},
																{
																	"nativeSrc": "2974:73:1",
																	"nodeType": "YulAssignment",
																	"src": "2974:73:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3019:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "3019:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3030:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3030:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3015:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3015:3:1"
																				},
																				"nativeSrc": "3015:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3015:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3039:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3039:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "2984:30:1",
																			"nodeType": "YulIdentifier",
																			"src": "2984:30:1"
																		},
																		"nativeSrc": "2984:63:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2984:63:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2974:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2974:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nativeSrc": "2555:509:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2601:9:1",
														"nodeType": "YulTypedName",
														"src": "2601:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2612:7:1",
														"nodeType": "YulTypedName",
														"src": "2612:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2624:6:1",
														"nodeType": "YulTypedName",
														"src": "2624:6:1",
														"type": ""
													}
												],
												"src": "2555:509:1"
											},
											{
												"body": {
													"nativeSrc": "3115:32:1",
													"nodeType": "YulBlock",
													"src": "3115:32:1",
													"statements": [
														{
															"nativeSrc": "3125:16:1",
															"nodeType": "YulAssignment",
															"src": "3125:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "3136:5:1",
																"nodeType": "YulIdentifier",
																"src": "3136:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3125:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "3125:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3070:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3097:5:1",
														"nodeType": "YulTypedName",
														"src": "3097:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3107:7:1",
														"nodeType": "YulTypedName",
														"src": "3107:7:1",
														"type": ""
													}
												],
												"src": "3070:77:1"
											},
											{
												"body": {
													"nativeSrc": "3218:53:1",
													"nodeType": "YulBlock",
													"src": "3218:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3235:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3235:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3258:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3258:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3240:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "3240:17:1"
																		},
																		"nativeSrc": "3240:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3240:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3228:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3228:6:1"
																},
																"nativeSrc": "3228:37:1",
																"nodeType": "YulFunctionCall",
																"src": "3228:37:1"
															},
															"nativeSrc": "3228:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "3228:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3153:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3206:5:1",
														"nodeType": "YulTypedName",
														"src": "3206:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3213:3:1",
														"nodeType": "YulTypedName",
														"src": "3213:3:1",
														"type": ""
													}
												],
												"src": "3153:118:1"
											},
											{
												"body": {
													"nativeSrc": "3375:124:1",
													"nodeType": "YulBlock",
													"src": "3375:124:1",
													"statements": [
														{
															"nativeSrc": "3385:26:1",
															"nodeType": "YulAssignment",
															"src": "3385:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3397:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3397:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3408:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3408:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3393:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3393:3:1"
																},
																"nativeSrc": "3393:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3393:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3385:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3385:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3465:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3465:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3478:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3478:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3489:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3489:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3474:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3474:3:1"
																		},
																		"nativeSrc": "3474:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3474:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3421:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "3421:43:1"
																},
																"nativeSrc": "3421:71:1",
																"nodeType": "YulFunctionCall",
																"src": "3421:71:1"
															},
															"nativeSrc": "3421:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "3421:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3277:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3347:9:1",
														"nodeType": "YulTypedName",
														"src": "3347:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3359:6:1",
														"nodeType": "YulTypedName",
														"src": "3359:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3370:4:1",
														"nodeType": "YulTypedName",
														"src": "3370:4:1",
														"type": ""
													}
												],
												"src": "3277:222:1"
											},
											{
												"body": {
													"nativeSrc": "3533:152:1",
													"nodeType": "YulBlock",
													"src": "3533:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3550:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3550:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3553:77:1",
																		"nodeType": "YulLiteral",
																		"src": "3553:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3543:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3543:6:1"
																},
																"nativeSrc": "3543:88:1",
																"nodeType": "YulFunctionCall",
																"src": "3543:88:1"
															},
															"nativeSrc": "3543:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "3543:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3647:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3647:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3650:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3650:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3640:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3640:6:1"
																},
																"nativeSrc": "3640:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3640:15:1"
															},
															"nativeSrc": "3640:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3640:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3671:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3671:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3674:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3674:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3664:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3664:6:1"
																},
																"nativeSrc": "3664:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3664:15:1"
															},
															"nativeSrc": "3664:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3664:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3505:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "3505:180:1"
											},
											{
												"body": {
													"nativeSrc": "3735:147:1",
													"nodeType": "YulBlock",
													"src": "3735:147:1",
													"statements": [
														{
															"nativeSrc": "3745:25:1",
															"nodeType": "YulAssignment",
															"src": "3745:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3768:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3768:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3750:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "3750:17:1"
																},
																"nativeSrc": "3750:20:1",
																"nodeType": "YulFunctionCall",
																"src": "3750:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "3745:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "3745:1:1"
																}
															]
														},
														{
															"nativeSrc": "3779:25:1",
															"nodeType": "YulAssignment",
															"src": "3779:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3802:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3802:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3784:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "3784:17:1"
																},
																"nativeSrc": "3784:20:1",
																"nodeType": "YulFunctionCall",
																"src": "3784:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "3779:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "3779:1:1"
																}
															]
														},
														{
															"nativeSrc": "3813:16:1",
															"nodeType": "YulAssignment",
															"src": "3813:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3824:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3824:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3827:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3827:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3820:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3820:3:1"
																},
																"nativeSrc": "3820:9:1",
																"nodeType": "YulFunctionCall",
																"src": "3820:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3813:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3813:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3853:22:1",
																"nodeType": "YulBlock",
																"src": "3853:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3855:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "3855:16:1"
																			},
																			"nativeSrc": "3855:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3855:18:1"
																		},
																		"nativeSrc": "3855:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3855:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3845:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3845:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3848:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3848:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3842:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3842:2:1"
																},
																"nativeSrc": "3842:10:1",
																"nodeType": "YulFunctionCall",
																"src": "3842:10:1"
															},
															"nativeSrc": "3839:36:1",
															"nodeType": "YulIf",
															"src": "3839:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3691:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3722:1:1",
														"nodeType": "YulTypedName",
														"src": "3722:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3725:1:1",
														"nodeType": "YulTypedName",
														"src": "3725:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3731:3:1",
														"nodeType": "YulTypedName",
														"src": "3731:3:1",
														"type": ""
													}
												],
												"src": "3691:191:1"
											},
											{
												"body": {
													"nativeSrc": "3916:152:1",
													"nodeType": "YulBlock",
													"src": "3916:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3933:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3933:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3936:77:1",
																		"nodeType": "YulLiteral",
																		"src": "3936:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3926:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3926:6:1"
																},
																"nativeSrc": "3926:88:1",
																"nodeType": "YulFunctionCall",
																"src": "3926:88:1"
															},
															"nativeSrc": "3926:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "3926:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4030:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4030:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4033:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4033:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4023:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4023:6:1"
																},
																"nativeSrc": "4023:15:1",
																"nodeType": "YulFunctionCall",
																"src": "4023:15:1"
															},
															"nativeSrc": "4023:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "4023:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4054:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4054:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4057:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4057:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4047:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4047:6:1"
																},
																"nativeSrc": "4047:15:1",
																"nodeType": "YulFunctionCall",
																"src": "4047:15:1"
															},
															"nativeSrc": "4047:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "4047:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "3888:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "3888:180:1"
											},
											{
												"body": {
													"nativeSrc": "4117:190:1",
													"nodeType": "YulBlock",
													"src": "4117:190:1",
													"statements": [
														{
															"nativeSrc": "4127:33:1",
															"nodeType": "YulAssignment",
															"src": "4127:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4154:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4154:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4136:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "4136:17:1"
																},
																"nativeSrc": "4136:24:1",
																"nodeType": "YulFunctionCall",
																"src": "4136:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4127:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "4127:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4250:22:1",
																"nodeType": "YulBlock",
																"src": "4250:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4252:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4252:16:1"
																			},
																			"nativeSrc": "4252:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4252:18:1"
																		},
																		"nativeSrc": "4252:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4252:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4175:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4175:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4182:66:1",
																		"nodeType": "YulLiteral",
																		"src": "4182:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4172:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4172:2:1"
																},
																"nativeSrc": "4172:77:1",
																"nodeType": "YulFunctionCall",
																"src": "4172:77:1"
															},
															"nativeSrc": "4169:103:1",
															"nodeType": "YulIf",
															"src": "4169:103:1"
														},
														{
															"nativeSrc": "4281:20:1",
															"nodeType": "YulAssignment",
															"src": "4281:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4292:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4292:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4299:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4299:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4288:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4288:3:1"
																},
																"nativeSrc": "4288:13:1",
																"nodeType": "YulFunctionCall",
																"src": "4288:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4281:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4281:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "4074:233:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4103:5:1",
														"nodeType": "YulTypedName",
														"src": "4103:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4113:3:1",
														"nodeType": "YulTypedName",
														"src": "4113:3:1",
														"type": ""
													}
												],
												"src": "4074:233:1"
											},
											{
												"body": {
													"nativeSrc": "4409:73:1",
													"nodeType": "YulBlock",
													"src": "4409:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4426:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4426:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4431:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4431:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4419:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4419:6:1"
																},
																"nativeSrc": "4419:19:1",
																"nodeType": "YulFunctionCall",
																"src": "4419:19:1"
															},
															"nativeSrc": "4419:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "4419:19:1"
														},
														{
															"nativeSrc": "4447:29:1",
															"nodeType": "YulAssignment",
															"src": "4447:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4466:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4466:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4471:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4471:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4462:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4462:3:1"
																},
																"nativeSrc": "4462:14:1",
																"nodeType": "YulFunctionCall",
																"src": "4462:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4447:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "4447:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4313:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4381:3:1",
														"nodeType": "YulTypedName",
														"src": "4381:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4386:6:1",
														"nodeType": "YulTypedName",
														"src": "4386:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4397:11:1",
														"nodeType": "YulTypedName",
														"src": "4397:11:1",
														"type": ""
													}
												],
												"src": "4313:169:1"
											},
											{
												"body": {
													"nativeSrc": "4594:65:1",
													"nodeType": "YulBlock",
													"src": "4594:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4616:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4616:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4624:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4624:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4612:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4612:3:1"
																		},
																		"nativeSrc": "4612:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4612:14:1"
																	},
																	{
																		"hexValue": "496e76616c696420526f6d616e206e756d6572616c",
																		"kind": "string",
																		"nativeSrc": "4628:23:1",
																		"nodeType": "YulLiteral",
																		"src": "4628:23:1",
																		"type": "",
																		"value": "Invalid Roman numeral"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4605:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4605:6:1"
																},
																"nativeSrc": "4605:47:1",
																"nodeType": "YulFunctionCall",
																"src": "4605:47:1"
															},
															"nativeSrc": "4605:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "4605:47:1"
														}
													]
												},
												"name": "store_literal_in_memory_443bcbedec6bfd11bf3f7c2e4d7a61e94bd9a8c86ae5e8725cce10dbcb4bb336",
												"nativeSrc": "4488:171:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4586:6:1",
														"nodeType": "YulTypedName",
														"src": "4586:6:1",
														"type": ""
													}
												],
												"src": "4488:171:1"
											},
											{
												"body": {
													"nativeSrc": "4811:220:1",
													"nodeType": "YulBlock",
													"src": "4811:220:1",
													"statements": [
														{
															"nativeSrc": "4821:74:1",
															"nodeType": "YulAssignment",
															"src": "4821:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4887:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4887:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4892:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4892:2:1",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4828:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "4828:58:1"
																},
																"nativeSrc": "4828:67:1",
																"nodeType": "YulFunctionCall",
																"src": "4828:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4821:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4821:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4993:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4993:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_443bcbedec6bfd11bf3f7c2e4d7a61e94bd9a8c86ae5e8725cce10dbcb4bb336",
																	"nativeSrc": "4904:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "4904:88:1"
																},
																"nativeSrc": "4904:93:1",
																"nodeType": "YulFunctionCall",
																"src": "4904:93:1"
															},
															"nativeSrc": "4904:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "4904:93:1"
														},
														{
															"nativeSrc": "5006:19:1",
															"nodeType": "YulAssignment",
															"src": "5006:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5017:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5017:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5022:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5022:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5013:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5013:3:1"
																},
																"nativeSrc": "5013:12:1",
																"nodeType": "YulFunctionCall",
																"src": "5013:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5006:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5006:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_443bcbedec6bfd11bf3f7c2e4d7a61e94bd9a8c86ae5e8725cce10dbcb4bb336_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4665:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4799:3:1",
														"nodeType": "YulTypedName",
														"src": "4799:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4807:3:1",
														"nodeType": "YulTypedName",
														"src": "4807:3:1",
														"type": ""
													}
												],
												"src": "4665:366:1"
											},
											{
												"body": {
													"nativeSrc": "5208:248:1",
													"nodeType": "YulBlock",
													"src": "5208:248:1",
													"statements": [
														{
															"nativeSrc": "5218:26:1",
															"nodeType": "YulAssignment",
															"src": "5218:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5230:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5230:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5241:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5241:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5226:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5226:3:1"
																},
																"nativeSrc": "5226:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5226:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5218:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5218:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5265:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5265:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5276:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5276:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5261:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5261:3:1"
																		},
																		"nativeSrc": "5261:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5261:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5284:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "5284:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5290:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5290:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5280:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5280:3:1"
																		},
																		"nativeSrc": "5280:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5280:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5254:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5254:6:1"
																},
																"nativeSrc": "5254:47:1",
																"nodeType": "YulFunctionCall",
																"src": "5254:47:1"
															},
															"nativeSrc": "5254:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "5254:47:1"
														},
														{
															"nativeSrc": "5310:139:1",
															"nodeType": "YulAssignment",
															"src": "5310:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5444:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5444:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_443bcbedec6bfd11bf3f7c2e4d7a61e94bd9a8c86ae5e8725cce10dbcb4bb336_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5318:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "5318:124:1"
																},
																"nativeSrc": "5318:131:1",
																"nodeType": "YulFunctionCall",
																"src": "5318:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5310:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5310:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_443bcbedec6bfd11bf3f7c2e4d7a61e94bd9a8c86ae5e8725cce10dbcb4bb336__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5037:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5188:9:1",
														"nodeType": "YulTypedName",
														"src": "5188:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5203:4:1",
														"nodeType": "YulTypedName",
														"src": "5203:4:1",
														"type": ""
													}
												],
												"src": "5037:419:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_443bcbedec6bfd11bf3f7c2e4d7a61e94bd9a8c86ae5e8725cce10dbcb4bb336(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Roman numeral\")\n\n    }\n\n    function abi_encode_t_stringliteral_443bcbedec6bfd11bf3f7c2e4d7a61e94bd9a8c86ae5e8725cce10dbcb4bb336_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_443bcbedec6bfd11bf3f7c2e4d7a61e94bd9a8c86ae5e8725cce10dbcb4bb336(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_443bcbedec6bfd11bf3f7c2e4d7a61e94bd9a8c86ae5e8725cce10dbcb4bb336__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_443bcbedec6bfd11bf3f7c2e4d7a61e94bd9a8c86ae5e8725cce10dbcb4bb336_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610029575f3560e01c8063cb159dfe1461002d575b5f5ffd5b610047600480360381019061004291906108f8565b61005d565b6040516100549190610957565b60405180910390f35b5f5f8290505f815190505f5f90505f5f90505b828110156101515782600182610086919061099d565b101561010b575f6100dd8583815181106100a3576100a26109d0565b5b602001015160f81c60f81b866001856100bc919061099d565b815181106100cd576100cc6109d0565b5b602001015160f81c60f81b61015d565b90505f81146101095780836100f2919061099d565b9250600282610101919061099d565b915050610070565b505b610131848281518110610121576101206109d0565b5b602001015160f81c60f81b61052a565b8261013c919061099d565b91508080610149906109fd565b915050610070565b81945050505050919050565b5f7f4900000000000000000000000000000000000000000000000000000000000000837effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480156101f057507f5600000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b156101fe5760049050610524565b7f4900000000000000000000000000000000000000000000000000000000000000837effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614801561029057507f5800000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b1561029e5760099050610524565b7f5800000000000000000000000000000000000000000000000000000000000000837effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614801561033057507f4c00000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b1561033e5760289050610524565b7f5800000000000000000000000000000000000000000000000000000000000000837effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480156103d057507f4300000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b156103de57605a9050610524565b7f4300000000000000000000000000000000000000000000000000000000000000837effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614801561047057507f4400000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b1561047f576101909050610524565b7f4300000000000000000000000000000000000000000000000000000000000000837effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614801561051157507f4d00000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b15610520576103849050610524565b5f90505b92915050565b5f7f4900000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361057d57600190506107a6565b7f5600000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916036105cf57600590506107a6565b7f5800000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361062157600a90506107a6565b7f4c00000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361067357603290506107a6565b7f4300000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916036106c557606490506107a6565b7f4400000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191603610718576101f490506107a6565b7f4d00000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361076b576103e890506107a6565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079d90610a9e565b60405180910390fd5b919050565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61080a826107c4565b810181811067ffffffffffffffff82111715610829576108286107d4565b5b80604052505050565b5f61083b6107ab565b90506108478282610801565b919050565b5f67ffffffffffffffff821115610866576108656107d4565b5b61086f826107c4565b9050602081019050919050565b828183375f83830152505050565b5f61089c6108978461084c565b610832565b9050828152602081018484840111156108b8576108b76107c0565b5b6108c384828561087c565b509392505050565b5f82601f8301126108df576108de6107bc565b5b81356108ef84826020860161088a565b91505092915050565b5f6020828403121561090d5761090c6107b4565b5b5f82013567ffffffffffffffff81111561092a576109296107b8565b5b610936848285016108cb565b91505092915050565b5f819050919050565b6109518161093f565b82525050565b5f60208201905061096a5f830184610948565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6109a78261093f565b91506109b28361093f565b92508282019050808211156109ca576109c9610970565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f610a078261093f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a3957610a38610970565b5b600182019050919050565b5f82825260208201905092915050565b7f496e76616c696420526f6d616e206e756d6572616c00000000000000000000005f82015250565b5f610a88601583610a44565b9150610a9382610a54565b602082019050919050565b5f6020820190508181035f830152610ab581610a7c565b905091905056fea264697066735822122069bc787606fa994bba709d010bef4e4ec122c965ebd0907544ed1f74d9aec18064736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCB159DFE EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x8F8 JUMP JUMPDEST PUSH2 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54 SWAP2 SWAP1 PUSH2 0x957 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 DUP3 SWAP1 POP PUSH0 DUP2 MLOAD SWAP1 POP PUSH0 PUSH0 SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x151 JUMPI DUP3 PUSH1 0x1 DUP3 PUSH2 0x86 SWAP2 SWAP1 PUSH2 0x99D JUMP JUMPDEST LT ISZERO PUSH2 0x10B JUMPI PUSH0 PUSH2 0xDD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xA3 JUMPI PUSH2 0xA2 PUSH2 0x9D0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP7 PUSH1 0x1 DUP6 PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x99D JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xCD JUMPI PUSH2 0xCC PUSH2 0x9D0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH2 0x15D JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 EQ PUSH2 0x109 JUMPI DUP1 DUP4 PUSH2 0xF2 SWAP2 SWAP1 PUSH2 0x99D JUMP JUMPDEST SWAP3 POP PUSH1 0x2 DUP3 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x99D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x70 JUMP JUMPDEST POP JUMPDEST PUSH2 0x131 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x121 JUMPI PUSH2 0x120 PUSH2 0x9D0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH2 0x52A JUMP JUMPDEST DUP3 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x99D JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x149 SWAP1 PUSH2 0x9FD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x70 JUMP JUMPDEST DUP2 SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x4900000000000000000000000000000000000000000000000000000000000000 DUP4 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 ISZERO PUSH2 0x1F0 JUMPI POP PUSH32 0x5600000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST ISZERO PUSH2 0x1FE JUMPI PUSH1 0x4 SWAP1 POP PUSH2 0x524 JUMP JUMPDEST PUSH32 0x4900000000000000000000000000000000000000000000000000000000000000 DUP4 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 ISZERO PUSH2 0x290 JUMPI POP PUSH32 0x5800000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST ISZERO PUSH2 0x29E JUMPI PUSH1 0x9 SWAP1 POP PUSH2 0x524 JUMP JUMPDEST PUSH32 0x5800000000000000000000000000000000000000000000000000000000000000 DUP4 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 ISZERO PUSH2 0x330 JUMPI POP PUSH32 0x4C00000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST ISZERO PUSH2 0x33E JUMPI PUSH1 0x28 SWAP1 POP PUSH2 0x524 JUMP JUMPDEST PUSH32 0x5800000000000000000000000000000000000000000000000000000000000000 DUP4 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 ISZERO PUSH2 0x3D0 JUMPI POP PUSH32 0x4300000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST ISZERO PUSH2 0x3DE JUMPI PUSH1 0x5A SWAP1 POP PUSH2 0x524 JUMP JUMPDEST PUSH32 0x4300000000000000000000000000000000000000000000000000000000000000 DUP4 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 ISZERO PUSH2 0x470 JUMPI POP PUSH32 0x4400000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST ISZERO PUSH2 0x47F JUMPI PUSH2 0x190 SWAP1 POP PUSH2 0x524 JUMP JUMPDEST PUSH32 0x4300000000000000000000000000000000000000000000000000000000000000 DUP4 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 ISZERO PUSH2 0x511 JUMPI POP PUSH32 0x4D00000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST ISZERO PUSH2 0x520 JUMPI PUSH2 0x384 SWAP1 POP PUSH2 0x524 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x4900000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x57D JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x7A6 JUMP JUMPDEST PUSH32 0x5600000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x5CF JUMPI PUSH1 0x5 SWAP1 POP PUSH2 0x7A6 JUMP JUMPDEST PUSH32 0x5800000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x621 JUMPI PUSH1 0xA SWAP1 POP PUSH2 0x7A6 JUMP JUMPDEST PUSH32 0x4C00000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x673 JUMPI PUSH1 0x32 SWAP1 POP PUSH2 0x7A6 JUMP JUMPDEST PUSH32 0x4300000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x6C5 JUMPI PUSH1 0x64 SWAP1 POP PUSH2 0x7A6 JUMP JUMPDEST PUSH32 0x4400000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x718 JUMPI PUSH2 0x1F4 SWAP1 POP PUSH2 0x7A6 JUMP JUMPDEST PUSH32 0x4D00000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x76B JUMPI PUSH2 0x3E8 SWAP1 POP PUSH2 0x7A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79D SWAP1 PUSH2 0xA9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x80A DUP3 PUSH2 0x7C4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x829 JUMPI PUSH2 0x828 PUSH2 0x7D4 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x83B PUSH2 0x7AB JUMP JUMPDEST SWAP1 POP PUSH2 0x847 DUP3 DUP3 PUSH2 0x801 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x866 JUMPI PUSH2 0x865 PUSH2 0x7D4 JUMP JUMPDEST JUMPDEST PUSH2 0x86F DUP3 PUSH2 0x7C4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x89C PUSH2 0x897 DUP5 PUSH2 0x84C JUMP JUMPDEST PUSH2 0x832 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x8B8 JUMPI PUSH2 0x8B7 PUSH2 0x7C0 JUMP JUMPDEST JUMPDEST PUSH2 0x8C3 DUP5 DUP3 DUP6 PUSH2 0x87C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x8DF JUMPI PUSH2 0x8DE PUSH2 0x7BC JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x8EF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x88A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x90D JUMPI PUSH2 0x90C PUSH2 0x7B4 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x92A JUMPI PUSH2 0x929 PUSH2 0x7B8 JUMP JUMPDEST JUMPDEST PUSH2 0x936 DUP5 DUP3 DUP6 ADD PUSH2 0x8CB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x951 DUP2 PUSH2 0x93F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x96A PUSH0 DUP4 ADD DUP5 PUSH2 0x948 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x9A7 DUP3 PUSH2 0x93F JUMP JUMPDEST SWAP2 POP PUSH2 0x9B2 DUP4 PUSH2 0x93F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x9CA JUMPI PUSH2 0x9C9 PUSH2 0x970 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xA07 DUP3 PUSH2 0x93F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xA39 JUMPI PUSH2 0xA38 PUSH2 0x970 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420526F6D616E206E756D6572616C0000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA88 PUSH1 0x15 DUP4 PUSH2 0xA44 JUMP JUMPDEST SWAP2 POP PUSH2 0xA93 DUP3 PUSH2 0xA54 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xAB5 DUP2 PUSH2 0xA7C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xBC787606FA994BBA709D ADD SIGNEXTEND 0xEF 0x4E 0x4E 0xC1 0x22 0xC9 PUSH6 0xEBD0907544ED 0x1F PUSH21 0xD9AEC18064736F6C634300081E0033000000000000 ",
							"sourceMap": "58:1364:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;82:575;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;142:4;159:17;185:3;159:30;;200:8;211:4;:11;200:22;;233:10;246:1;233:14;;258:6;267:1;258:10;;279:348;290:3;286:1;:7;279:348;;;320:3;316:1;313;:4;;;;:::i;:::-;:10;309:239;;;343:9;355:31;368:4;373:1;368:7;;;;;;;;:::i;:::-;;;;;;;;;;376:4;383:1;381;:3;;;;:::i;:::-;376:9;;;;;;;;:::i;:::-;;;;;;;;;;355:12;:31::i;:::-;343:43;;416:1;408:4;:9;405:129;;450:4;441:13;;;;;:::i;:::-;;;482:1;477:6;;;;;:::i;:::-;;;506:8;;;405:129;324:224;309:239;574:23;589:4;594:1;589:7;;;;;;;;:::i;:::-;;;;;;;;;;574:14;:23::i;:::-;565:32;;;;;:::i;:::-;;;612:3;;;;;:::i;:::-;;;;279:348;;;644:5;637:12;;;;;;82:575;;;:::o;1034:381::-;1099:4;1121:8;:1;:8;;;;:20;;;;;1133:8;:1;:8;;;;1121:20;1117:34;;;1150:1;1143:8;;;;1117:34;1167:8;:1;:8;;;;:20;;;;;1179:8;:1;:8;;;;1167:20;1163:34;;;1196:1;1189:8;;;;1163:34;1213:8;:1;:8;;;;:20;;;;;1225:8;:1;:8;;;;1213:20;1209:35;;;1242:2;1235:9;;;;1209:35;1260:8;:1;:8;;;;:20;;;;;1272:8;:1;:8;;;;1260:20;1256:35;;;1289:2;1282:9;;;;1256:35;1307:8;:1;:8;;;;:20;;;;;1319:8;:1;:8;;;;1307:20;1303:36;;;1336:3;1329:10;;;;1303:36;1355:8;:1;:8;;;;:20;;;;;1367:8;:1;:8;;;;1355:20;1351:36;;;1384:3;1377:10;;;;1351:36;1406:1;1399:8;;1034:381;;;;;:::o;665:361::-;722:4;744:8;:1;:8;;;;740:22;;761:1;754:8;;;;740:22;778:8;:1;:8;;;;774:22;;795:1;788:8;;;;774:22;812:8;:1;:8;;;;808:23;;829:2;822:9;;;;808:23;847:8;:1;:8;;;;843:23;;864:2;857:9;;;;843:23;882:8;:1;:8;;;;878:24;;899:3;892:10;;;;878:24;918:8;:1;:8;;;;914:24;;935:3;928:10;;;;914:24;954:8;:1;:8;;;;950:25;;971:4;964:11;;;;950:25;987:31;;;;;;;;;;:::i;:::-;;;;;;;;665:361;;;;:::o;7:75:1:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:148::-;1708:6;1703:3;1698;1685:30;1749:1;1740:6;1735:3;1731:16;1724:27;1610:148;;;:::o;1764:425::-;1842:5;1867:66;1883:49;1925:6;1883:49;:::i;:::-;1867:66;:::i;:::-;1858:75;;1956:6;1949:5;1942:21;1994:4;1987:5;1983:16;2032:3;2023:6;2018:3;2014:16;2011:25;2008:112;;;2039:79;;:::i;:::-;2008:112;2129:54;2176:6;2171:3;2166;2129:54;:::i;:::-;1848:341;1764:425;;;;;:::o;2209:340::-;2265:5;2314:3;2307:4;2299:6;2295:17;2291:27;2281:122;;2322:79;;:::i;:::-;2281:122;2439:6;2426:20;2464:79;2539:3;2531:6;2524:4;2516:6;2512:17;2464:79;:::i;:::-;2455:88;;2271:278;2209:340;;;;:::o;2555:509::-;2624:6;2673:2;2661:9;2652:7;2648:23;2644:32;2641:119;;;2679:79;;:::i;:::-;2641:119;2827:1;2816:9;2812:17;2799:31;2857:18;2849:6;2846:30;2843:117;;;2879:79;;:::i;:::-;2843:117;2984:63;3039:7;3030:6;3019:9;3015:22;2984:63;:::i;:::-;2974:73;;2770:287;2555:509;;;;:::o;3070:77::-;3107:7;3136:5;3125:16;;3070:77;;;:::o;3153:118::-;3240:24;3258:5;3240:24;:::i;:::-;3235:3;3228:37;3153:118;;:::o;3277:222::-;3370:4;3408:2;3397:9;3393:18;3385:26;;3421:71;3489:1;3478:9;3474:17;3465:6;3421:71;:::i;:::-;3277:222;;;;:::o;3505:180::-;3553:77;3550:1;3543:88;3650:4;3647:1;3640:15;3674:4;3671:1;3664:15;3691:191;3731:3;3750:20;3768:1;3750:20;:::i;:::-;3745:25;;3784:20;3802:1;3784:20;:::i;:::-;3779:25;;3827:1;3824;3820:9;3813:16;;3848:3;3845:1;3842:10;3839:36;;;3855:18;;:::i;:::-;3839:36;3691:191;;;;:::o;3888:180::-;3936:77;3933:1;3926:88;4033:4;4030:1;4023:15;4057:4;4054:1;4047:15;4074:233;4113:3;4136:24;4154:5;4136:24;:::i;:::-;4127:33;;4182:66;4175:5;4172:77;4169:103;;4252:18;;:::i;:::-;4169:103;4299:1;4292:5;4288:13;4281:20;;4074:233;;;:::o;4313:169::-;4397:11;4431:6;4426:3;4419:19;4471:4;4466:3;4462:14;4447:29;;4313:169;;;;:::o;4488:171::-;4628:23;4624:1;4616:6;4612:14;4605:47;4488:171;:::o;4665:366::-;4807:3;4828:67;4892:2;4887:3;4828:67;:::i;:::-;4821:74;;4904:93;4993:3;4904:93;:::i;:::-;5022:2;5017:3;5013:12;5006:19;;4665:366;;;:::o;5037:419::-;5203:4;5241:2;5230:9;5226:18;5218:26;;5290:9;5284:4;5280:20;5276:1;5265:9;5261:17;5254:47;5318:131;5444:4;5318:131;:::i;:::-;5310:139;;5037:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "560400",
								"executionCost": "592",
								"totalCost": "560992"
							},
							"external": {
								"romanToInt(string)": "infinite"
							},
							"internal": {
								"getPairValue(bytes1,bytes1)": "490",
								"getSingleValue(bytes1)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 1422,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 58,
									"end": 1422,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 58,
									"end": 1422,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1422,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1422,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1422,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1422,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 1422,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1422,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 1422,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 1422,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1422,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 1422,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1422,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1422,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 1422,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1422,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 1422,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 1422,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1422,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 1422,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122069bc787606fa994bba709d010bef4e4ec122c965ebd0907544ed1f74d9aec18064736f6c634300081e0033",
									".code": [
										{
											"begin": 58,
											"end": 1422,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 1422,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 1422,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1422,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1422,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 1422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 1422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 1422,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1422,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1422,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 1422,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1422,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 1422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 1422,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1422,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 58,
											"end": 1422,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1422,
											"name": "PUSH",
											"source": 0,
											"value": "CB159DFE"
										},
										{
											"begin": 58,
											"end": 1422,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 58,
											"end": 1422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1422,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 1422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 1422,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 82,
											"end": 657,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 82,
											"end": 657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 82,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 82,
											"end": 657,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 82,
											"end": 657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 657,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 82,
											"end": 657,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 82,
											"end": 657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 82,
											"end": 657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 82,
											"end": 657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 82,
											"end": 657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 82,
											"end": 657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 82,
											"end": 657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 82,
											"end": 657,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 82,
											"end": 657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 82,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 82,
											"end": 657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 82,
											"end": 657,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 82,
											"end": 657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 82,
											"end": 657,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 82,
											"end": 657,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 82,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 82,
											"end": 657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 82,
											"end": 657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 82,
											"end": 657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 82,
											"end": 657,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 82,
											"end": 657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 82,
											"end": 657,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 82,
											"end": 657,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 82,
											"end": 657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 82,
											"end": 657,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 82,
											"end": 657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 657,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 82,
											"end": 657,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 82,
											"end": 657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 142,
											"end": 146,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 159,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 185,
											"end": 188,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 159,
											"end": 189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 159,
											"end": 189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 200,
											"end": 208,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 211,
											"end": 215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 211,
											"end": 222,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 200,
											"end": 222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 233,
											"end": 243,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 246,
											"end": 247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 258,
											"end": 264,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 267,
											"end": 268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 258,
											"end": 268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 258,
											"end": 268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 279,
											"end": 627,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 279,
											"end": 627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 290,
											"end": 293,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 286,
											"end": 287,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 286,
											"end": 293,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 279,
											"end": 627,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 279,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 279,
											"end": 627,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 320,
											"end": 323,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 316,
											"end": 317,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 313,
											"end": 314,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 313,
											"end": 317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 313,
											"end": 317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 313,
											"end": 317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 313,
											"end": 317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 313,
											"end": 317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 313,
											"end": 317,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 313,
											"end": 317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 313,
											"end": 323,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 309,
											"end": 548,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 309,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 309,
											"end": 548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 343,
											"end": 352,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 368,
											"end": 372,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 373,
											"end": 374,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 368,
											"end": 375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 368,
											"end": 375,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 368,
											"end": 375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 368,
											"end": 375,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 368,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 368,
											"end": 375,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 368,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 368,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 368,
											"end": 375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 368,
											"end": 375,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 368,
											"end": 375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 368,
											"end": 375,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 368,
											"end": 375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 368,
											"end": 375,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 368,
											"end": 375,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 368,
											"end": 375,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 368,
											"end": 375,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 368,
											"end": 375,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 368,
											"end": 375,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 368,
											"end": 375,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 368,
											"end": 375,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 376,
											"end": 380,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 383,
											"end": 384,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 381,
											"end": 382,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 381,
											"end": 384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 381,
											"end": 384,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 381,
											"end": 384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 381,
											"end": 384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 381,
											"end": 384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 381,
											"end": 384,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 381,
											"end": 384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 376,
											"end": 385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 376,
											"end": 385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 376,
											"end": 385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 376,
											"end": 385,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 376,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 376,
											"end": 385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 376,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 376,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 376,
											"end": 385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 376,
											"end": 385,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 376,
											"end": 385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 376,
											"end": 385,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 376,
											"end": 385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 376,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 376,
											"end": 385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 376,
											"end": 385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 376,
											"end": 385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 376,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 376,
											"end": 385,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 376,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 376,
											"end": 385,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 355,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 355,
											"end": 386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 355,
											"end": 386,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 343,
											"end": 386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 343,
											"end": 386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 416,
											"end": 417,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 408,
											"end": 417,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 405,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 405,
											"end": 534,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 450,
											"end": 454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 441,
											"end": 454,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 441,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 441,
											"end": 454,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 441,
											"end": 454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 441,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 441,
											"end": 454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 441,
											"end": 454,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 441,
											"end": 454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 441,
											"end": 454,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 441,
											"end": 454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 482,
											"end": 483,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 477,
											"end": 483,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 477,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 477,
											"end": 483,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 477,
											"end": 483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 477,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 477,
											"end": 483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 477,
											"end": 483,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 477,
											"end": 483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 477,
											"end": 483,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 477,
											"end": 483,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 506,
											"end": 514,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 506,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 506,
											"end": 514,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 405,
											"end": 534,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 405,
											"end": 534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 324,
											"end": 548,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 309,
											"end": 548,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 309,
											"end": 548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 574,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 589,
											"end": 593,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 594,
											"end": 595,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 589,
											"end": 596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 589,
											"end": 596,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 589,
											"end": 596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 589,
											"end": 596,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 589,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 589,
											"end": 596,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 589,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 589,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 589,
											"end": 596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 596,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 589,
											"end": 596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 589,
											"end": 596,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 589,
											"end": 596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 589,
											"end": 596,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 589,
											"end": 596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 589,
											"end": 596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 589,
											"end": 596,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 589,
											"end": 596,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 589,
											"end": 596,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 589,
											"end": 596,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 589,
											"end": 596,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 574,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 574,
											"end": 597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 574,
											"end": 597,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 574,
											"end": 597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 565,
											"end": 597,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 565,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 565,
											"end": 597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 565,
											"end": 597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 565,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 565,
											"end": 597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 565,
											"end": 597,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 565,
											"end": 597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 565,
											"end": 597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 565,
											"end": 597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 612,
											"end": 615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 612,
											"end": 615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 612,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 612,
											"end": 615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 612,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 612,
											"end": 615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 612,
											"end": 615,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 612,
											"end": 615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 612,
											"end": 615,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 612,
											"end": 615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 612,
											"end": 615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 279,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 279,
											"end": 627,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 279,
											"end": 627,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 279,
											"end": 627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 644,
											"end": 649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 637,
											"end": 649,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 637,
											"end": 649,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 637,
											"end": 649,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 637,
											"end": 649,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 637,
											"end": 649,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 637,
											"end": 649,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 82,
											"end": 657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 82,
											"end": 657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 82,
											"end": 657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1034,
											"end": 1415,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1034,
											"end": 1415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1099,
											"end": 1103,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1129,
											"name": "PUSH",
											"source": 0,
											"value": "4900000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1121,
											"end": 1122,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1129,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1121,
											"end": 1129,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1129,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1129,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1141,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1141,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1121,
											"end": 1141,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1141,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "5600000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1133,
											"end": 1134,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1133,
											"end": 1141,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1141,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1141,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1141,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1121,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1151,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1117,
											"end": 1151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1143,
											"end": 1151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1143,
											"end": 1151,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1151,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1117,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1175,
											"name": "PUSH",
											"source": 0,
											"value": "4900000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1167,
											"end": 1168,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1175,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1167,
											"end": 1175,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1175,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1187,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1167,
											"end": 1187,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1179,
											"end": 1187,
											"name": "PUSH",
											"source": 0,
											"value": "5800000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1179,
											"end": 1180,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1179,
											"end": 1187,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1179,
											"end": 1187,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1179,
											"end": 1187,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1179,
											"end": 1187,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1187,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1167,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1163,
											"end": 1197,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1163,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1163,
											"end": 1197,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1197,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1189,
											"end": 1197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1197,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1189,
											"end": 1197,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1163,
											"end": 1197,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1163,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1221,
											"name": "PUSH",
											"source": 0,
											"value": "5800000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1213,
											"end": 1214,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1221,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1213,
											"end": 1221,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1221,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1221,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1233,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1233,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1213,
											"end": 1233,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1233,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1233,
											"name": "PUSH",
											"source": 0,
											"value": "4C00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1225,
											"end": 1226,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1233,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1225,
											"end": 1233,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1233,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1233,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1233,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1213,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1209,
											"end": 1244,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1209,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1209,
											"end": 1244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1244,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1235,
											"end": 1244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1235,
											"end": 1244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1235,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1235,
											"end": 1244,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1209,
											"end": 1244,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1209,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1268,
											"name": "PUSH",
											"source": 0,
											"value": "5800000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1260,
											"end": 1261,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1268,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1260,
											"end": 1268,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1268,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1268,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1280,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1280,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1260,
											"end": 1280,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1280,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1280,
											"name": "PUSH",
											"source": 0,
											"value": "4300000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1272,
											"end": 1273,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1280,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1272,
											"end": 1280,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1280,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1280,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1280,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1260,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1256,
											"end": 1291,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1256,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1256,
											"end": 1291,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1291,
											"name": "PUSH",
											"source": 0,
											"value": "5A"
										},
										{
											"begin": 1282,
											"end": 1291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1282,
											"end": 1291,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1256,
											"end": 1291,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1256,
											"end": 1291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1315,
											"name": "PUSH",
											"source": 0,
											"value": "4300000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1307,
											"end": 1308,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1315,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1307,
											"end": 1315,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1315,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1315,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1327,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1307,
											"end": 1327,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1327,
											"name": "PUSH",
											"source": 0,
											"value": "4400000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1319,
											"end": 1320,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1327,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1319,
											"end": 1327,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1327,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1327,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1327,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1307,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1339,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1303,
											"end": 1339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 1339,
											"name": "PUSH",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1329,
											"end": 1339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1329,
											"end": 1339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1329,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1329,
											"end": 1339,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1339,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1303,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1363,
											"name": "PUSH",
											"source": 0,
											"value": "4300000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1355,
											"end": 1356,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1363,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1355,
											"end": 1363,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1363,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1363,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1375,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1355,
											"end": 1375,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1375,
											"name": "PUSH",
											"source": 0,
											"value": "4D00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1367,
											"end": 1368,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1375,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1367,
											"end": 1375,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1375,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1375,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1375,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1355,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1387,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1351,
											"end": 1387,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1387,
											"name": "PUSH",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 1377,
											"end": 1387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1377,
											"end": 1387,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1377,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1377,
											"end": 1387,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1387,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1351,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1406,
											"end": 1407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1399,
											"end": 1407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1034,
											"end": 1415,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1034,
											"end": 1415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1034,
											"end": 1415,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1034,
											"end": 1415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1034,
											"end": 1415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1034,
											"end": 1415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1034,
											"end": 1415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 665,
											"end": 1026,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 665,
											"end": 1026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 722,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 744,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "4900000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 744,
											"end": 745,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 744,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 744,
											"end": 752,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 744,
											"end": 752,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 744,
											"end": 752,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 740,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 740,
											"end": 762,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 761,
											"end": 762,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 754,
											"end": 762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 754,
											"end": 762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 754,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 754,
											"end": 762,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 740,
											"end": 762,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 740,
											"end": 762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 778,
											"end": 786,
											"name": "PUSH",
											"source": 0,
											"value": "5600000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 778,
											"end": 779,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 778,
											"end": 786,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 778,
											"end": 786,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 778,
											"end": 786,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 778,
											"end": 786,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 774,
											"end": 796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 774,
											"end": 796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 795,
											"end": 796,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 788,
											"end": 796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 788,
											"end": 796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 788,
											"end": 796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 788,
											"end": 796,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 774,
											"end": 796,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 774,
											"end": 796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 812,
											"end": 820,
											"name": "PUSH",
											"source": 0,
											"value": "5800000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 812,
											"end": 813,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 812,
											"end": 820,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 812,
											"end": 820,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 812,
											"end": 820,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 812,
											"end": 820,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 808,
											"end": 831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 808,
											"end": 831,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 829,
											"end": 831,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 822,
											"end": 831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 822,
											"end": 831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 822,
											"end": 831,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 808,
											"end": 831,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 808,
											"end": 831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 847,
											"end": 855,
											"name": "PUSH",
											"source": 0,
											"value": "4C00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 847,
											"end": 848,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 847,
											"end": 855,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 847,
											"end": 855,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 847,
											"end": 855,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 847,
											"end": 855,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 843,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 843,
											"end": 866,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 864,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 857,
											"end": 866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 857,
											"end": 866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 857,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 857,
											"end": 866,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 843,
											"end": 866,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 843,
											"end": 866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 882,
											"end": 890,
											"name": "PUSH",
											"source": 0,
											"value": "4300000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 882,
											"end": 883,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 882,
											"end": 890,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 882,
											"end": 890,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 882,
											"end": 890,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 882,
											"end": 890,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 878,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 878,
											"end": 902,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 899,
											"end": 902,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 892,
											"end": 902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 892,
											"end": 902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 892,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 892,
											"end": 902,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 878,
											"end": 902,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 878,
											"end": 902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 918,
											"end": 926,
											"name": "PUSH",
											"source": 0,
											"value": "4400000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 918,
											"end": 919,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 918,
											"end": 926,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 918,
											"end": 926,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 918,
											"end": 926,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 918,
											"end": 926,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 914,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 914,
											"end": 938,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 935,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "1F4"
										},
										{
											"begin": 928,
											"end": 938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 928,
											"end": 938,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 928,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 928,
											"end": 938,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 914,
											"end": 938,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 914,
											"end": 938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 954,
											"end": 962,
											"name": "PUSH",
											"source": 0,
											"value": "4D00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 954,
											"end": 955,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 954,
											"end": 962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 954,
											"end": 962,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 954,
											"end": 962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 954,
											"end": 962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 950,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 950,
											"end": 975,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 971,
											"end": 975,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 964,
											"end": 975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 964,
											"end": 975,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 964,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 964,
											"end": 975,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 950,
											"end": 975,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 950,
											"end": 975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 987,
											"end": 1018,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 987,
											"end": 1018,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 987,
											"end": 1018,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 987,
											"end": 1018,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 987,
											"end": 1018,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 987,
											"end": 1018,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 987,
											"end": 1018,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 987,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 987,
											"end": 1018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 987,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 987,
											"end": 1018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 987,
											"end": 1018,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 987,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 987,
											"end": 1018,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 987,
											"end": 1018,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 987,
											"end": 1018,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 987,
											"end": 1018,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 987,
											"end": 1018,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 987,
											"end": 1018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 987,
											"end": 1018,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 665,
											"end": 1026,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 665,
											"end": 1026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 665,
											"end": 1026,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 665,
											"end": 1026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 665,
											"end": 1026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 665,
											"end": 1026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 451,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 334,
											"end": 451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 443,
											"end": 444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 445,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 457,
											"end": 574,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 457,
											"end": 574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 566,
											"end": 567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 564,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 568,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 580,
											"end": 682,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 580,
											"end": 682,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 621,
											"end": 627,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 674,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 668,
											"end": 675,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 663,
											"end": 665,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 656,
											"end": 661,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 652,
											"end": 666,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 648,
											"end": 676,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 638,
											"end": 676,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 638,
											"end": 676,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 580,
											"end": 682,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 580,
											"end": 682,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 580,
											"end": 682,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 580,
											"end": 682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 688,
											"end": 868,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 688,
											"end": 868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 736,
											"end": 813,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 733,
											"end": 734,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 726,
											"end": 814,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 833,
											"end": 837,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 830,
											"end": 831,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 823,
											"end": 838,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 857,
											"end": 861,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 854,
											"end": 855,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 847,
											"end": 862,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 957,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 979,
											"end": 983,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 957,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 957,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 957,
											"end": 984,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 957,
											"end": 984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 949,
											"end": 955,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 945,
											"end": 985,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1085,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1039,
											"end": 1049,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1070,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1033,
											"end": 1095,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1098,
											"end": 1116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1138,
											"end": 1148,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1136,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1127,
											"end": 1149,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1155,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 874,
											"end": 1155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1201,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1222,
											"end": 1242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1242,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1242,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1279,
											"end": 1283,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1271,
											"end": 1277,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1251,
											"end": 1284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1448,
											"end": 1466,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1440,
											"end": 1446,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1437,
											"end": 1467,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1470,
											"end": 1488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1530,
											"end": 1536,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1508,
											"end": 1537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1537,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1596,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1586,
											"end": 1590,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 1597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1597,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1758,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1610,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1706,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1701,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1715,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 1750,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1740,
											"end": 1746,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 1738,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1751,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1842,
											"end": 1847,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1883,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1925,
											"end": 1931,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1883,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1883,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1883,
											"end": 1932,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1883,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1867,
											"end": 1933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1933,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1867,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1933,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1933,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1956,
											"end": 1962,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1949,
											"end": 1954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 1963,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1994,
											"end": 1998,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1987,
											"end": 1992,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 1999,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2035,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2023,
											"end": 2029,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2021,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2014,
											"end": 2030,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2036,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2120,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2008,
											"end": 2120,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2039,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2039,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2039,
											"end": 2118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2039,
											"end": 2118,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2039,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2120,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2008,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2129,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2176,
											"end": 2182,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2171,
											"end": 2174,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2169,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2129,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2129,
											"end": 2183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2129,
											"end": 2183,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2129,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 2189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 2189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2209,
											"end": 2549,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2209,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2270,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2314,
											"end": 2317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2307,
											"end": 2311,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2299,
											"end": 2305,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2295,
											"end": 2312,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2318,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2281,
											"end": 2403,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2322,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2322,
											"end": 2401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2401,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2322,
											"end": 2401,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2403,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2281,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2439,
											"end": 2445,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2426,
											"end": 2446,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2539,
											"end": 2542,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 2528,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2516,
											"end": 2522,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2512,
											"end": 2529,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2464,
											"end": 2543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2543,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2464,
											"end": 2543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2543,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2271,
											"end": 2549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2209,
											"end": 2549,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2209,
											"end": 2549,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2209,
											"end": 2549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2209,
											"end": 2549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2209,
											"end": 2549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3064,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2555,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2624,
											"end": 2630,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2673,
											"end": 2675,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2661,
											"end": 2670,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2659,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2671,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 2676,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2679,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2679,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2679,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2679,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2679,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2827,
											"end": 2828,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2816,
											"end": 2825,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2812,
											"end": 2829,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2830,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2857,
											"end": 2875,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2849,
											"end": 2855,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2846,
											"end": 2876,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2843,
											"end": 2960,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2843,
											"end": 2960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2843,
											"end": 2960,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2879,
											"end": 2958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2879,
											"end": 2958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2879,
											"end": 2958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2879,
											"end": 2958,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2879,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2843,
											"end": 2960,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2843,
											"end": 2960,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3039,
											"end": 3046,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3030,
											"end": 3036,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3015,
											"end": 3037,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2984,
											"end": 3047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3047,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2984,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2974,
											"end": 3047,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2974,
											"end": 3047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2770,
											"end": 3057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3064,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3064,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3070,
											"end": 3147,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3070,
											"end": 3147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3107,
											"end": 3114,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3136,
											"end": 3141,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3125,
											"end": 3141,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3125,
											"end": 3141,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3070,
											"end": 3147,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3070,
											"end": 3147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3070,
											"end": 3147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3070,
											"end": 3147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3153,
											"end": 3271,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3153,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3240,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3258,
											"end": 3263,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3240,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3240,
											"end": 3264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3240,
											"end": 3264,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3240,
											"end": 3264,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3235,
											"end": 3238,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3228,
											"end": 3265,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3153,
											"end": 3271,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3153,
											"end": 3271,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3153,
											"end": 3271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3277,
											"end": 3499,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3277,
											"end": 3499,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3374,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3408,
											"end": 3410,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3397,
											"end": 3406,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3411,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3385,
											"end": 3411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3385,
											"end": 3411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3421,
											"end": 3492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 3489,
											"end": 3490,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3478,
											"end": 3487,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3474,
											"end": 3491,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3471,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3421,
											"end": 3492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3421,
											"end": 3492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3421,
											"end": 3492,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 3421,
											"end": 3492,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3277,
											"end": 3499,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3277,
											"end": 3499,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3277,
											"end": 3499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3277,
											"end": 3499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3277,
											"end": 3499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3505,
											"end": 3685,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3505,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3630,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3550,
											"end": 3551,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3543,
											"end": 3631,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 3654,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3647,
											"end": 3648,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3640,
											"end": 3655,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3674,
											"end": 3678,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3671,
											"end": 3672,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3679,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 3882,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 3691,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3731,
											"end": 3734,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3750,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 3768,
											"end": 3769,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3750,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3750,
											"end": 3770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3750,
											"end": 3770,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 3750,
											"end": 3770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3745,
											"end": 3770,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3745,
											"end": 3770,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 3802,
											"end": 3803,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3784,
											"end": 3804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3779,
											"end": 3804,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3779,
											"end": 3804,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3827,
											"end": 3828,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3824,
											"end": 3825,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3820,
											"end": 3829,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3813,
											"end": 3829,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3813,
											"end": 3829,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3848,
											"end": 3851,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3845,
											"end": 3846,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3842,
											"end": 3852,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3839,
											"end": 3875,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3839,
											"end": 3875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 3839,
											"end": 3875,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3855,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 3855,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3855,
											"end": 3873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3855,
											"end": 3873,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 3855,
											"end": 3873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3839,
											"end": 3875,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 3839,
											"end": 3875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 3882,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 3882,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 3882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 3882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 3882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3888,
											"end": 4068,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3888,
											"end": 4068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3936,
											"end": 4013,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3933,
											"end": 3934,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3926,
											"end": 4014,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4033,
											"end": 4037,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4030,
											"end": 4031,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4023,
											"end": 4038,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4057,
											"end": 4061,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4054,
											"end": 4055,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4047,
											"end": 4062,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4074,
											"end": 4307,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4074,
											"end": 4307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4113,
											"end": 4116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4136,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 4154,
											"end": 4159,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4136,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4136,
											"end": 4160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4136,
											"end": 4160,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 4136,
											"end": 4160,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4160,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4160,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4182,
											"end": 4248,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4175,
											"end": 4180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4172,
											"end": 4249,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 4169,
											"end": 4272,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4252,
											"end": 4270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 4252,
											"end": 4270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4252,
											"end": 4270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4252,
											"end": 4270,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 4252,
											"end": 4270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4272,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 4169,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4299,
											"end": 4300,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4292,
											"end": 4297,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4301,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4281,
											"end": 4301,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4281,
											"end": 4301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4074,
											"end": 4307,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4074,
											"end": 4307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4074,
											"end": 4307,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4074,
											"end": 4307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4482,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4313,
											"end": 4482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4397,
											"end": 4408,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4431,
											"end": 4437,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4426,
											"end": 4429,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4419,
											"end": 4438,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 4475,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4466,
											"end": 4469,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4462,
											"end": 4476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4447,
											"end": 4476,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4447,
											"end": 4476,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4482,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4482,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4482,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4482,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4488,
											"end": 4659,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4488,
											"end": 4659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4628,
											"end": 4651,
											"name": "PUSH",
											"source": 1,
											"value": "496E76616C696420526F6D616E206E756D6572616C0000000000000000000000"
										},
										{
											"begin": 4624,
											"end": 4625,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4616,
											"end": 4622,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4626,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4605,
											"end": 4652,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4488,
											"end": 4659,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4488,
											"end": 4659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4665,
											"end": 5031,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4665,
											"end": 5031,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4807,
											"end": 4810,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4828,
											"end": 4895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 4892,
											"end": 4894,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 4887,
											"end": 4890,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4828,
											"end": 4895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4895,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 4828,
											"end": 4895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4821,
											"end": 4895,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4821,
											"end": 4895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4904,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 4993,
											"end": 4996,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4904,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4904,
											"end": 4997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4904,
											"end": 4997,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 4904,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5022,
											"end": 5024,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5017,
											"end": 5020,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5025,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5006,
											"end": 5025,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5006,
											"end": 5025,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4665,
											"end": 5031,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4665,
											"end": 5031,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4665,
											"end": 5031,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4665,
											"end": 5031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5037,
											"end": 5456,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 5037,
											"end": 5456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5241,
											"end": 5243,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5230,
											"end": 5239,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5226,
											"end": 5244,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5218,
											"end": 5244,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5218,
											"end": 5244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5290,
											"end": 5299,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5284,
											"end": 5288,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5280,
											"end": 5300,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5276,
											"end": 5277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5265,
											"end": 5274,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5278,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5254,
											"end": 5301,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5318,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 5444,
											"end": 5448,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5318,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 5318,
											"end": 5449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5318,
											"end": 5449,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 5318,
											"end": 5449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5449,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5449,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5037,
											"end": 5456,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5037,
											"end": 5456,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5037,
											"end": 5456,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5037,
											"end": 5456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/RomanToInt.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"romanToInt(string)": "cb159dfe"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"romanToInt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RomanToInt.sol\":\"Roman\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/RomanToInt.sol\":{\"keccak256\":\"0xf5e48c52204d9b1a9a880df26fd783786fbf2a81ef5eb558f9ad32f929c1386f\",\"license\":\"NFT\",\"urls\":[\"bzz-raw://0b413f4787511ee329b5c220ae8eb687bf1a6b05fd103cddcbdd180e36bcc783\",\"dweb:/ipfs/QmNivUXa1fy5pNeMrMUUVf7tNEZWcoyctBy1Hvfya6jgyk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/RomanToInt.sol": {
				"ast": {
					"absolutePath": "contracts/RomanToInt.sol",
					"exportedSymbols": {
						"Roman": [
							208
						]
					},
					"id": 209,
					"license": "NFT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8"
							],
							"nodeType": "PragmaDirective",
							"src": "33:21:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Roman",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 208,
							"linearizedBaseContracts": [
								208
							],
							"name": "Roman",
							"nameLocation": "67:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "148:509:0",
										"statements": [
											{
												"assignments": [
													9
												],
												"declarations": [
													{
														"constant": false,
														"id": 9,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "172:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 80,
														"src": "159:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 8,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "159:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 14,
												"initialValue": {
													"arguments": [
														{
															"id": 12,
															"name": "str",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "185:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "179:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 10,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "179:5:0",
															"typeDescriptions": {}
														}
													},
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "179:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "159:30:0"
											},
											{
												"assignments": [
													16
												],
												"declarations": [
													{
														"constant": false,
														"id": 16,
														"mutability": "mutable",
														"name": "len",
														"nameLocation": "205:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 80,
														"src": "200:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 15,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "200:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 19,
												"initialValue": {
													"expression": {
														"id": 17,
														"name": "data",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "211:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "216:6:0",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "211:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "200:22:0"
											},
											{
												"assignments": [
													21
												],
												"declarations": [
													{
														"constant": false,
														"id": 21,
														"mutability": "mutable",
														"name": "total",
														"nameLocation": "238:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 80,
														"src": "233:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 20,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "233:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 23,
												"initialValue": {
													"hexValue": "30",
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "246:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "233:14:0"
											},
											{
												"assignments": [
													25
												],
												"declarations": [
													{
														"constant": false,
														"id": 25,
														"mutability": "mutable",
														"name": "i",
														"nameLocation": "263:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 80,
														"src": "258:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 24,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "258:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 27,
												"initialValue": {
													"hexValue": "30",
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "267:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "258:10:0"
											},
											{
												"body": {
													"id": 76,
													"nodeType": "Block",
													"src": "295:332:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 35,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 33,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 31,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 25,
																		"src": "313:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 32,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "316:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "313:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 34,
																	"name": "len",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "320:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "313:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 64,
															"nodeType": "IfStatement",
															"src": "309:239:0",
															"trueBody": {
																"id": 63,
																"nodeType": "Block",
																"src": "324:224:0",
																"statements": [
																	{
																		"assignments": [
																			37
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 37,
																				"mutability": "mutable",
																				"name": "pair",
																				"nameLocation": "348:4:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 63,
																				"src": "343:9:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 36,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "343:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 48,
																		"initialValue": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 39,
																						"name": "data",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 9,
																						"src": "368:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 41,
																					"indexExpression": {
																						"id": 40,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 25,
																						"src": "373:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "368:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				},
																				{
																					"baseExpression": {
																						"id": 42,
																						"name": "data",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 9,
																						"src": "376:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 46,
																					"indexExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 45,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 43,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 25,
																							"src": "381:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 44,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "383:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "381:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "376:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					},
																					{
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				],
																				"id": 38,
																				"name": "getPairValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 207,
																				"src": "355:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_bytes1_$_t_bytes1_$returns$_t_uint256_$",
																					"typeString": "function (bytes1,bytes1) pure returns (uint256)"
																				}
																			},
																			"id": 47,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "355:31:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "343:43:0"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 51,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 49,
																				"name": "pair",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 37,
																				"src": "408:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "!=",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 50,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "416:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "408:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 62,
																		"nodeType": "IfStatement",
																		"src": "405:129:0",
																		"trueBody": {
																			"id": 61,
																			"nodeType": "Block",
																			"src": "418:116:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 54,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 52,
																							"name": "total",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 21,
																							"src": "441:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"id": 53,
																							"name": "pair",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 37,
																							"src": "450:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "441:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 55,
																					"nodeType": "ExpressionStatement",
																					"src": "441:13:0"
																				},
																				{
																					"expression": {
																						"id": 58,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 56,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 25,
																							"src": "477:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"hexValue": "32",
																							"id": 57,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "482:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2_by_1",
																								"typeString": "int_const 2"
																							},
																							"value": "2"
																						},
																						"src": "477:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 59,
																					"nodeType": "ExpressionStatement",
																					"src": "477:6:0"
																				},
																				{
																					"id": 60,
																					"nodeType": "Continue",
																					"src": "506:8:0"
																				}
																			]
																		}
																	}
																]
															}
														},
														{
															"expression": {
																"id": 71,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 65,
																	"name": "total",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "565:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 67,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 9,
																				"src": "589:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 69,
																			"indexExpression": {
																				"id": 68,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 25,
																				"src": "594:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "589:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes1",
																				"typeString": "bytes1"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes1",
																				"typeString": "bytes1"
																			}
																		],
																		"id": 66,
																		"name": "getSingleValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "574:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes1_$returns$_t_uint256_$",
																			"typeString": "function (bytes1) pure returns (uint256)"
																		}
																	},
																	"id": 70,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "574:23:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "565:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 72,
															"nodeType": "ExpressionStatement",
															"src": "565:32:0"
														},
														{
															"expression": {
																"id": 74,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "612:3:0",
																"subExpression": {
																	"id": 73,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 25,
																	"src": "612:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 75,
															"nodeType": "ExpressionStatement",
															"src": "612:3:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 28,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "286:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 29,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "290:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "286:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 77,
												"nodeType": "WhileStatement",
												"src": "279:348:0"
											},
											{
												"expression": {
													"id": 78,
													"name": "total",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 21,
													"src": "644:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 7,
												"id": 79,
												"nodeType": "Return",
												"src": "637:12:0"
											}
										]
									},
									"functionSelector": "cb159dfe",
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "romanToInt",
									"nameLocation": "91:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "116:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "102:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "102:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "101:19:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "142:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "142:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "141:6:0"
									},
									"scope": 208,
									"src": "82:575:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 134,
										"nodeType": "Block",
										"src": "728:298:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 88,
														"name": "s",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "744:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "49",
														"id": 89,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "749:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_8d61ecf6e15472e15b1a0f63cd77f62aa57e6edcd3871d7a841f1056fb42b216",
															"typeString": "literal_string \"I\""
														},
														"value": "I"
													},
													"src": "744:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 93,
												"nodeType": "IfStatement",
												"src": "740:22:0",
												"trueBody": {
													"expression": {
														"hexValue": "31",
														"id": 91,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "761:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"functionReturnParameters": 87,
													"id": 92,
													"nodeType": "Return",
													"src": "754:8:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 94,
														"name": "s",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "778:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "56",
														"id": 95,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "783:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_f0da850a6b7c61a66cdd43ac7529affc6000442af1c1bdda1db3bb7220bf7613",
															"typeString": "literal_string \"V\""
														},
														"value": "V"
													},
													"src": "778:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 99,
												"nodeType": "IfStatement",
												"src": "774:22:0",
												"trueBody": {
													"expression": {
														"hexValue": "35",
														"id": 97,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "795:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"functionReturnParameters": 87,
													"id": 98,
													"nodeType": "Return",
													"src": "788:8:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 100,
														"name": "s",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "812:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "58",
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "817:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_550c64a15031c3064454c19adc6243a6122c138a242eaa098da50bb114fc8d56",
															"typeString": "literal_string \"X\""
														},
														"value": "X"
													},
													"src": "812:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 105,
												"nodeType": "IfStatement",
												"src": "808:23:0",
												"trueBody": {
													"expression": {
														"hexValue": "3130",
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "829:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"functionReturnParameters": 87,
													"id": 104,
													"nodeType": "Return",
													"src": "822:9:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "s",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "847:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "4c",
														"id": 107,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "852:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_8aa64f937099b65a4febc243a5ae0f2d6416bb9e473c30dd29c1ee498fb7c5a8",
															"typeString": "literal_string \"L\""
														},
														"value": "L"
													},
													"src": "847:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 111,
												"nodeType": "IfStatement",
												"src": "843:23:0",
												"trueBody": {
													"expression": {
														"hexValue": "3530",
														"id": 109,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "864:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_50_by_1",
															"typeString": "int_const 50"
														},
														"value": "50"
													},
													"functionReturnParameters": 87,
													"id": 110,
													"nodeType": "Return",
													"src": "857:9:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													},
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 112,
														"name": "s",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "882:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "43",
														"id": 113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "887:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_017e667f4b8c174291d1543c466717566e206df1bfd6f30271055ddafdb18f72",
															"typeString": "literal_string \"C\""
														},
														"value": "C"
													},
													"src": "882:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 117,
												"nodeType": "IfStatement",
												"src": "878:24:0",
												"trueBody": {
													"expression": {
														"hexValue": "313030",
														"id": 115,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "899:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"functionReturnParameters": 87,
													"id": 116,
													"nodeType": "Return",
													"src": "892:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													},
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 118,
														"name": "s",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "918:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "44",
														"id": 119,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "923:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_6c3fd336b49dcb1c57dd4fbeaf5f898320b0da06a5ef64e798c6497600bb79f2",
															"typeString": "literal_string \"D\""
														},
														"value": "D"
													},
													"src": "918:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 123,
												"nodeType": "IfStatement",
												"src": "914:24:0",
												"trueBody": {
													"expression": {
														"hexValue": "353030",
														"id": 121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "935:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_500_by_1",
															"typeString": "int_const 500"
														},
														"value": "500"
													},
													"functionReturnParameters": 87,
													"id": 122,
													"nodeType": "Return",
													"src": "928:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 124,
														"name": "s",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "954:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "4d",
														"id": 125,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "959:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7d61fdc86cb928ea48fbf22d28ed5341c2e6a2599c550270b824b71dfa078d06",
															"typeString": "literal_string \"M\""
														},
														"value": "M"
													},
													"src": "954:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "IfStatement",
												"src": "950:25:0",
												"trueBody": {
													"expression": {
														"hexValue": "31303030",
														"id": 127,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "971:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"functionReturnParameters": 87,
													"id": 128,
													"nodeType": "Return",
													"src": "964:11:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "496e76616c696420526f6d616e206e756d6572616c",
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "994:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_443bcbedec6bfd11bf3f7c2e4d7a61e94bd9a8c86ae5e8725cce10dbcb4bb336",
																"typeString": "literal_string \"Invalid Roman numeral\""
															},
															"value": "Invalid Roman numeral"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_443bcbedec6bfd11bf3f7c2e4d7a61e94bd9a8c86ae5e8725cce10dbcb4bb336",
																"typeString": "literal_string \"Invalid Roman numeral\""
															}
														],
														"id": 130,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "987:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "987:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 133,
												"nodeType": "ExpressionStatement",
												"src": "987:31:0"
											}
										]
									},
									"id": 135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSingleValue",
									"nameLocation": "674:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "696:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "689:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 82,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "689:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "688:10:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "722:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 85,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "722:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "721:6:0"
									},
									"scope": 208,
									"src": "665:361:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 206,
										"nodeType": "Block",
										"src": "1105:310:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														},
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 144,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "1121:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes1",
																"typeString": "bytes1"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "49",
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1126:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d61ecf6e15472e15b1a0f63cd77f62aa57e6edcd3871d7a841f1056fb42b216",
																"typeString": "literal_string \"I\""
															},
															"value": "I"
														},
														"src": "1121:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														},
														"id": 149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 147,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "1133:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes1",
																"typeString": "bytes1"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "56",
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1138:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f0da850a6b7c61a66cdd43ac7529affc6000442af1c1bdda1db3bb7220bf7613",
																"typeString": "literal_string \"V\""
															},
															"value": "V"
														},
														"src": "1133:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1121:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 153,
												"nodeType": "IfStatement",
												"src": "1117:34:0",
												"trueBody": {
													"expression": {
														"hexValue": "34",
														"id": 151,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1150:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"functionReturnParameters": 143,
													"id": 152,
													"nodeType": "Return",
													"src": "1143:8:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														},
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 154,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "1167:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes1",
																"typeString": "bytes1"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "49",
															"id": 155,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1172:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d61ecf6e15472e15b1a0f63cd77f62aa57e6edcd3871d7a841f1056fb42b216",
																"typeString": "literal_string \"I\""
															},
															"value": "I"
														},
														"src": "1167:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														},
														"id": 159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 157,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "1179:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes1",
																"typeString": "bytes1"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "58",
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1184:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_550c64a15031c3064454c19adc6243a6122c138a242eaa098da50bb114fc8d56",
																"typeString": "literal_string \"X\""
															},
															"value": "X"
														},
														"src": "1179:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1167:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 163,
												"nodeType": "IfStatement",
												"src": "1163:34:0",
												"trueBody": {
													"expression": {
														"hexValue": "39",
														"id": 161,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1196:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_9_by_1",
															"typeString": "int_const 9"
														},
														"value": "9"
													},
													"functionReturnParameters": 143,
													"id": 162,
													"nodeType": "Return",
													"src": "1189:8:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														},
														"id": 166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 164,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "1213:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes1",
																"typeString": "bytes1"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "58",
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1218:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_550c64a15031c3064454c19adc6243a6122c138a242eaa098da50bb114fc8d56",
																"typeString": "literal_string \"X\""
															},
															"value": "X"
														},
														"src": "1213:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														},
														"id": 169,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 167,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "1225:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes1",
																"typeString": "bytes1"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "4c",
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1230:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8aa64f937099b65a4febc243a5ae0f2d6416bb9e473c30dd29c1ee498fb7c5a8",
																"typeString": "literal_string \"L\""
															},
															"value": "L"
														},
														"src": "1225:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1213:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 173,
												"nodeType": "IfStatement",
												"src": "1209:35:0",
												"trueBody": {
													"expression": {
														"hexValue": "3430",
														"id": 171,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1242:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_40_by_1",
															"typeString": "int_const 40"
														},
														"value": "40"
													},
													"functionReturnParameters": 143,
													"id": 172,
													"nodeType": "Return",
													"src": "1235:9:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 174,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "1260:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes1",
																"typeString": "bytes1"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "58",
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1265:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_550c64a15031c3064454c19adc6243a6122c138a242eaa098da50bb114fc8d56",
																"typeString": "literal_string \"X\""
															},
															"value": "X"
														},
														"src": "1260:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														},
														"id": 179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 177,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "1272:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes1",
																"typeString": "bytes1"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "43",
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1277:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_017e667f4b8c174291d1543c466717566e206df1bfd6f30271055ddafdb18f72",
																"typeString": "literal_string \"C\""
															},
															"value": "C"
														},
														"src": "1272:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1260:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 183,
												"nodeType": "IfStatement",
												"src": "1256:35:0",
												"trueBody": {
													"expression": {
														"hexValue": "3930",
														"id": 181,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1289:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_90_by_1",
															"typeString": "int_const 90"
														},
														"value": "90"
													},
													"functionReturnParameters": 143,
													"id": 182,
													"nodeType": "Return",
													"src": "1282:9:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														},
														"id": 186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 184,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "1307:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes1",
																"typeString": "bytes1"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "43",
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1312:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_017e667f4b8c174291d1543c466717566e206df1bfd6f30271055ddafdb18f72",
																"typeString": "literal_string \"C\""
															},
															"value": "C"
														},
														"src": "1307:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														},
														"id": 189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 187,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "1319:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes1",
																"typeString": "bytes1"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "44",
															"id": 188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1324:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c3fd336b49dcb1c57dd4fbeaf5f898320b0da06a5ef64e798c6497600bb79f2",
																"typeString": "literal_string \"D\""
															},
															"value": "D"
														},
														"src": "1319:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1307:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 193,
												"nodeType": "IfStatement",
												"src": "1303:36:0",
												"trueBody": {
													"expression": {
														"hexValue": "343030",
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1336:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_400_by_1",
															"typeString": "int_const 400"
														},
														"value": "400"
													},
													"functionReturnParameters": 143,
													"id": 192,
													"nodeType": "Return",
													"src": "1329:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														},
														"id": 196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 194,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "1355:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes1",
																"typeString": "bytes1"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "43",
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1360:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_017e667f4b8c174291d1543c466717566e206df1bfd6f30271055ddafdb18f72",
																"typeString": "literal_string \"C\""
															},
															"value": "C"
														},
														"src": "1355:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														},
														"id": 199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 197,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "1367:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes1",
																"typeString": "bytes1"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "4d",
															"id": 198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1372:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7d61fdc86cb928ea48fbf22d28ed5341c2e6a2599c550270b824b71dfa078d06",
																"typeString": "literal_string \"M\""
															},
															"value": "M"
														},
														"src": "1367:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1355:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 203,
												"nodeType": "IfStatement",
												"src": "1351:36:0",
												"trueBody": {
													"expression": {
														"hexValue": "393030",
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1384:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_900_by_1",
															"typeString": "int_const 900"
														},
														"value": "900"
													},
													"functionReturnParameters": 143,
													"id": 202,
													"nodeType": "Return",
													"src": "1377:10:0"
												}
											},
											{
												"expression": {
													"hexValue": "30",
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1406:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 143,
												"id": 205,
												"nodeType": "Return",
												"src": "1399:8:0"
											}
										]
									},
									"id": 207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPairValue",
									"nameLocation": "1043:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1063:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1056:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 136,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "1056:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1073:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1066:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 138,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "1066:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1055:20:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1099:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1099:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1098:6:0"
									},
									"scope": 208,
									"src": "1034:381:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 209,
							"src": "58:1364:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1391:0"
				},
				"id": 0
			}
		}
	}
}